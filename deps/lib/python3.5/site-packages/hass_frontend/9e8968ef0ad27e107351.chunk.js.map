{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.js","webpack:///./src/components/buttons/ha-call-service-button.js","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/util/hass-attributes-util.js","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/config/ha-form-style.js","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/panels/config/js/json_textarea.js","webpack:///./src/common/preact/event.js","webpack:///./src/panels/config/js/trigger/event.js","webpack:///./src/panels/config/js/trigger/homeassistant.js","webpack:///./src/panels/config/js/trigger/mqtt.js","webpack:///./src/panels/config/js/trigger/numeric_state.js","webpack:///./src/panels/config/js/trigger/state.js","webpack:///./src/panels/config/js/trigger/sun.js","webpack:///./src/panels/config/js/trigger/template.js","webpack:///./src/panels/config/js/trigger/time.js","webpack:///./src/common/entity/has_location.js","webpack:///./src/panels/config/js/trigger/zone.js","webpack:///./src/panels/config/js/trigger/trigger_edit.js","webpack:///./src/panels/config/js/trigger/trigger_row.js","webpack:///./src/panels/config/js/trigger/index.js","webpack:///./src/panels/config/js/condition/numeric_state.js","webpack:///./src/panels/config/js/condition/state.js","webpack:///./src/panels/config/js/condition/sun.js","webpack:///./src/panels/config/js/condition/template.js","webpack:///./src/panels/config/js/condition/time.js","webpack:///./src/panels/config/js/condition/zone.js","webpack:///./src/panels/config/js/condition/condition_edit.js","webpack:///./src/panels/config/js/condition/condition_row.js","webpack:///./src/panels/config/js/condition/index.js","webpack:///./src/panels/config/js/script/call_service.js","webpack:///./src/panels/config/js/script/condition.js","webpack:///./src/panels/config/js/script/delay.js","webpack:///./src/panels/config/js/script/event.js","webpack:///./src/panels/config/js/script/wait.js","webpack:///./src/panels/config/js/script/action_edit.js","webpack:///./src/panels/config/js/script/action_row.js","webpack:///./src/panels/config/js/script/index.js","webpack:///./src/panels/config/js/automation.js","webpack:///./src/common/preact/unmount.js","webpack:///./src/panels/config/automation/ha-automation-editor.js","webpack:///./src/panels/config/automation/ha-automation-picker.js","webpack:///./src/panels/config/automation/ha-config-automation.js","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/layouts/hass-subpage.js","webpack:///./src/panels/config/cloud/ha-config-cloud-account.js","webpack:///./src/panels/config/cloud/ha-config-cloud-forgot-password.js","webpack:///./src/panels/config/cloud/ha-config-cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud-register.js","webpack:///./src/panels/config/cloud/ha-config-cloud.js","webpack:///./src/panels/config/config-entries/ha-config-entries.js","webpack:///./src/panels/config/core/ha-config-section-core.js","webpack:///./src/components/ha-push-notifications-toggle.js","webpack:///./src/panels/config/core/ha-config-section-push-notifications.js","webpack:///./src/panels/config/core/ha-config-section-themes.js","webpack:///./src/panels/config/core/ha-config-section-translation.js","webpack:///./src/panels/config/core/ha-config-core.js","webpack:///./src/panels/config/ha-entity-config.js","webpack:///./src/common/entity/states_sort_by_name.js","webpack:///./src/panels/config/customize/types/ha-customize-array.js","webpack:///./src/panels/config/customize/types/ha-customize-boolean.js","webpack:///./src/panels/config/customize/types/ha-customize-icon.js","webpack:///./src/panels/config/customize/types/ha-customize-key-value.js","webpack:///./src/panels/config/customize/types/ha-customize-string.js","webpack:///./src/panels/config/customize/ha-customize-attribute.js","webpack:///./src/panels/config/customize/ha-form-customize-attributes.js","webpack:///./src/panels/config/customize/ha-form-customize.js","webpack:///./src/panels/config/customize/ha-config-customize.js","webpack:///./src/panels/config/dashboard/ha-config-cloud-menu.js","webpack:///./src/panels/config/dashboard/ha-config-entries-menu.js","webpack:///./src/panels/config/dashboard/ha-config-navigation.js","webpack:///./src/panels/config/dashboard/ha-config-dashboard.js","webpack:///./src/panels/config/js/script.js","webpack:///./src/panels/config/script/ha-script-editor.js","webpack:///./src/panels/config/script/ha-script-picker.js","webpack:///./src/panels/config/script/ha-config-script.js","webpack:///./src/components/ha-service-description.js","webpack:///./src/panels/config/zwave/zwave-groups.js","webpack:///./src/panels/config/zwave/zwave-log.js","webpack:///./src/panels/config/zwave/zwave-network.js","webpack:///./src/panels/config/zwave/zwave-node-config.js","webpack:///./src/panels/config/zwave/zwave-node-information.js","webpack:///./src/panels/config/zwave/zwave-usercodes.js","webpack:///./src/panels/config/zwave/zwave-values.js","webpack:///./src/panels/config/zwave/ha-config-zwave.js","webpack:///./src/panels/config/ha-panel-config.js"],"names":["customElements","define","Object","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_10__","a","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_9__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","template","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","properties","allowCustomEntity","type","Boolean","value","hass","observer","_hass","_states","Array","computed","autofocus","label","String","notify","opened","domainFilter","entityFilter","Function","disabled","_computeLabel","localize","_computeStates","entityIds","keys","states","filter","eid","substr","indexOf","entities","sort","map","key","_computeStateName","state","_common_entity_compute_state_name_js__WEBPACK_IMPORTED_MODULE_8__","_openedChanged","newVal","this","_hassChanged","_computeToggleIcon","_fireChanged","ev","stopPropagation","fire","202","module","__webpack_exports__","__webpack_require__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_1__","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_3__","progress","domain","service","serviceData","buttonTapped","el","eventData","callService","then","$","actionSuccess","success","actionError","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__","tempClass","className","classList","container","add","setTimeout","remove","ready","super","addEventListener","computeDisabled","hassAttributeUtil","binary_sensor","cover","sensor","string","json","icon","boolean","array","key-value","LOGIC_STATE_ATTRIBUTES","entity_picture","friendly_name","description","emulated_hue","domains","emulated_hue_name","haaska_hidden","haaska_name","homebridge_hidden","homebridge_name","supported_features","attribution","custom_ui_more_info","custom_ui_state_card","device_class","options","DOMAIN_DEVICE_CLASS","hidden","assumed_state","initial_state","unit_of_measurement","259","html_tag","polymer_element","events_mixin","allowCustomValue","items","_items","itemLabelPath","itemValuePath","_itemsChanged","_computeItemLabel","item","localize_mixin","_services","oldHass","config","services","result","forEach","i","length","push","documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","narrow","showMenu","isWide","computeContentClasses","classes","computeClasses","json_textarea_JSONTextArea","preact_esm","constructor","props","isValid","JSON","stringify","onChange","bind","target","parsed","parse","err","setState","componentWillReceiveProps","render","style","minWidth","width","border","c","onvalue-changed","onChangeEvent","prop","origData","name","data","assign","index","event_EventTrigger","eventDataChanged","event_data","trigger","event_type","defaultConfig","homeassistant_HassTrigger","radioGroupPicked","event","selected","id","aria-labelledby","onpaper-radio-group-changed","mqtt_MQTTTrigger","topic","payload","numeric_state_NumericStateTrigger","entityPicked","entity_id","value_template","below","above","state_StateTrigger","to","trgFrom","from","trgFor","for","sun_SunTrigger","offset","template_TemplateTrigger","time_TimeTrigger","at","hasLocation","stateObj","attributes","compute_state_domain","zoneAndLocationFilter","zone_ZoneTrigger","zonePicked","zone","TYPES","homeassistant","mqtt","numeric_state","sun","time","OPTIONS","trigger_edit_TriggerEdit","typeChanged","selectedItem","platform","Comp","no-animations","slot","oniron-select","opt","trigger_row_TriggerRow","onDelete","confirm","class","horizontal-align","horizontal-offset","vertical-offset","onTap","trigger_Trigger","addTrigger","triggerChanged","concat","newValue","splice","trg","idx","numeric_state_NumericStateCondition","condition","state_StateCondition","cndFor","sun_SunCondition","afterPicked","beforePicked","after","after_offset","before","before_offset","allow-empty-selection","template_TemplateCondition","time_TimeCondition","zone_zoneAndLocationFilter","zone_ZoneCondition","condition_edit_TYPES","condition_edit_OPTIONS","condition_edit_ConditionRow","condition_row_ConditionRow","condition_Condition","addCondition","conditionChanged","cnd","call_service_CallServiceAction","serviceChanged","serviceDataChanged","action","alias","condition_ConditionAction","delay_DelayAction","delay","event_EventAction","wait_WaitAction","onTemplateChange","[object Object]","wait_template","timeout","action_edit_TYPES","action_edit_OPTIONS","getType","action_edit_Action","newType","action_row_Action","script_Script","addAction","actionChanged","script","act","automation_Automation","automation","is-wide","unmount","mountEl","e","navigate_mixin","errors","dirty","creatingNew","_rendered","_renderScheduled","configChanged","disconnectedCallback","_updateComponent","automationChanged","oldVal","callApi","isArray","creatingNewChanged","backTapped","history","back","mergeEl","Promise","resolve","root","saveAutomation","Date","now","navigate","body","message","computeName","compute_state_name","automations","automationTapped","model","addAutomation","computeDescription","_backTapped","route","_routeData","_routeMatches","_creatingNew","_edittingAutomation","showEditor","computeAutomation","edittingAddon","routeData","computeAutomations","entity","entityA","entityB","nameA","toLowerCase","nameB","computeShowEditor","path","method","resp","response","header","account","handleLogout","_formatExpiration","date","format_date_time","_accountChanged","newAccount","cloud","_accountUpdater","clearTimeout","email","_requestInProgress","_error","_emailChanged","invalid","_keyDown","keyCode","_handleEmailPasswordReset","preventDefault","includes","flashMessage","setProperties","_password","observers","connectedCallback","requestAnimationFrame","flashRipple","simulatedRipple","_inputChanged","password","_handleLogin","focus","errCode","code","alert","_handleRegister","_handleForgotPassword","_dismissFlash","_verificationEmailSent","_handleResendVerifyEmail","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","loadingAccount","_flashMessage","_routeTail","_loginEmail","detail","_checkRoute","_debouncer","debounce","utils_async","timeOut","_equals","b","registeredDialog","_entries","_progress","_handlers","_loadData","dialogShowEvent","dialogTag","dialogImport","connection","subscribeEvents","unsub","_unsubEvents","_createFlow","newFlowForHandler","dialogClosedCallback","_continueFlow","continueFlowId","flow_id","_removeEntry","entryId","entry_id","entry","require_restart","_loadEntries","_loadDiscovery","handlers","entries","_computeIntegrationTitle","integration","validating","validateLog","groupLoaded","is_component_loaded","automationLoaded","scriptLoaded","validateConfig","pushSupported","readOnly","navigator","window","location","protocol","hostname","pushChecked","Notification","permission","loading","serviceWorker","reg","pushManager","getSubscription","subscription","_setPushSupported","handlePushChange","subscribePushNotifications","unsubscribePushNotifications","subscribe","userVisibleOnly","sub","browserName","userAgent","browser","console","error","unsubscribe","catch","themes","selectedTheme","Number","computeThemes","selectionChanged","selection","languageSelection","languages","computeLanguages","translationMetadata","translations","tag","nativeName","setLanguageSelection","language","languageSelectionChanged","computeIsZwaveLoaded","computeIsTranslationLoaded","computeIsThemesLoaded","allowDelete","selectedEntity","formState","formEl","component","form","entityChanged","computeSelectCaption","computeShowNoDevices","computeShowSpinner","computeShowPlaceholder","computeShowForm","hassChanged","entitiesChanged","oldEntities","oldEntityId","newIndex","findIndex","ent","loadEntity","saveEntity","hass_attributes_util","mutable_data","sortStatesByName","notifies","getOptions","computeSelected","getLabel","tapButton","secondary","closed","getIcon","itemObserver","wrapper","TYPE_TO_TAG","toUpperCase","child","lastChild","tagName","removeChild","parentNode","localAttributes","hasLocalAttributes","globalAttributes","hasGlobalAttributes","existingAttributes","hasExistingAttributes","newAttributes","hasNewAttributes","newAttributesOptions","selectedNewAttribute","localConfig","globalConfig","_initOpenObject","attribute","local","global","attr","objectId","_computeSingleAttribute","UNKNOWN_TYPE","_computeAttributes","computeLocalAttributes","localKeys","computeGlobalAttributes","globalKeys","computeExistingAttributes","entityKeys","computeShowWarning","some","filterFromAttributes","every","getNewAttributesOptions","conf","selectedNewAttributeObserver","option","ADD_TYPE","set","attributesObserver","entityConfig","computeEntities","_navigate","CORE_PAGES","pages","_computeLoaded","page","_computeCaption","_computeDescription","computeIsLoaded","script_ScriptEditor","sequenceChanged","sequence","href","scriptChanged","compute_object_id","saveScript","scripts","scriptTapped","addScript","_edittingScript","computeScript","computeScripts","_getDescription","domainServices","serviceObject","nodes","groups","selectedNode","selectedTargetNode","selectedGroup","otherGroupNodes","maxAssociations","noAssociationsLeft","serviceCalled","foo","refreshGroups","computeAssociationsLeft","computeMaxAssociations","max_associations","computeOtherGroupNodes","associations","values","association_instances","assoc","instance","node","find","n","node_id","caption","computeTargetInGroup","query_stage","computeSelectCaptionGroup","computeIsTargetNodeSelected","computeIsGroupSelected","computeAssocServiceData","association","target_node_id","group","groupData","selectedGroupChanged","ozwLogs","numLogLines","refreshLog","info","showDescription","helpTap","selectedConfigParameter","configParameterMax","configParameterMin","configValueHelpText","selectedConfigParameterType","selectedConfigValue","selectedConfigParameterValues","selectedConfigParameterNumValues","loadedConfigValue","wakeupInput","wakeupNode","refreshConfig","nodesChanged","wake_up_interval","computeGetWakeupValue","computeWakeupServiceData","computeConfigValueHelp","help","computeSetConfigParameterServiceData","valueData","parseInt","parameter","selectedConfigParameterChanged","max","min","data_items","isConfigParameterSelected","computeSelectCaptionConfigParameter","configData","selectedNodeAttrs","nodeInfoActive","nodeChanged","nodeAttrs","att","userCodes","userCodeMaxLen","selectedUserCode","selectedUserCodeValue","computedCodeOutput","refreshUserCodes","isUserCodeSelected","computeSelectCaptionUserCodes","selectedUserCodeChanged","a2hex","hex2a","computeUserCodeServiceData","code_slot","usercode","usercodes","str","arr","output","l","hex","charCodeAt","toString","join","hexx","hexMod","replace","fromCharCode","selectedValue","refreshValues","computeGetValueName","computeIsValueSelected","selectedValueChanged","computeValueNameServiceData","newValueNameInput","value_id","entityIgnored","ignored","entityPollingIntensity","poll_intensity","entityInfoActive","selectedEntityAttrs","newNodeNameInput","hasNodeUserCodes","showHelp","computeNodes","match","nodeid","selectedNodeChanged","selectedConfigParameterValue","configs","_objToArray","notifyPath","selectedEntityChanged","valueId","obj","valueIndex","computeSelectedEntityAttrs","entityAttrs","computeSelectCaptionEnt","computeIsNodeSelected","computeIsEntitySelected","computeNodeServiceData","computeHealNodeServiceData","return_routes","computeGetNodeName","node_name","computeNodeNameServiceData","computeRefreshEntityServiceData","computePollIntensityServiceData","polling_intensity","toggleHelp","wide","wideSidebar","computeIsWide","_routeChanged","prefix"],"mappings":"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","file":"9e8968ef0ad27e107351.chunk.js","sourcesContent":["import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\n\nimport './state-badge.js';\n\nimport computeStateName from '../../common/entity/compute_state_name.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaEntityPicker extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_states]]\"\n      item-value-path=\"entity_id\"\n      item-label-path=\"entity_id\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomEntity]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[_computeLabel(label, localize)]]\" class=\"input\" value=\"[[value]]\" disabled=\"[[disabled]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" no-ripple=\"\" hidden$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden=\"[[!_states.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n          paper-icon-item {\n            margin: -10px;\n          }\n        </style>\n        <paper-icon-item>\n          <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n          <paper-item-body two-line=\"\">\n            <div>[[_computeStateName(item)]]</div>\n            <div secondary=\"\">[[item.entity_id]]</div>\n          </paper-item-body>\n        </paper-icon-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomEntity: {\n        type: Boolean,\n        value: false,\n      },\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _hass: Object,\n      _states: {\n        type: Array,\n        computed: '_computeStates(_hass, domainFilter, entityFilter)',\n      },\n      autofocus: Boolean,\n      label: {\n        type: String,\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      domainFilter: {\n        type: String,\n        value: null,\n      },\n      entityFilter: {\n        type: Function,\n        value: null,\n      },\n      disabled: Boolean,\n    };\n  }\n\n  _computeLabel(label, localize) {\n    return label === undefined\n      ? localize('ui.components.entity.entity-picker.entity')\n      : label;\n  }\n\n  _computeStates(hass, domainFilter, entityFilter) {\n    if (!hass) return [];\n\n    let entityIds = Object.keys(hass.states);\n\n    if (domainFilter) {\n      entityIds = entityIds.filter(eid => eid.substr(0, eid.indexOf('.')) === domainFilter);\n    }\n\n    let entities = entityIds.sort().map(key => hass.states[key]);\n\n    if (entityFilter) {\n      entities = entities.filter(entityFilter);\n    }\n\n    return entities;\n  }\n\n  _computeStateName(state) {\n    return computeStateName(state);\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._hass = this.hass;\n    }\n  }\n\n  _hassChanged(newVal) {\n    if (!this.opened) {\n      this._hass = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-entity-picker', HaEntityPicker);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-progress-button.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallServiceButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-progress-button id=\"progress\" progress=\"[[progress]]\" on-click=\"buttonTapped\"><slot></slot></ha-progress-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      domain: {\n        type: String,\n      },\n\n      service: {\n        type: String,\n      },\n\n      serviceData: {\n        type: Object,\n        value: {},\n      },\n    };\n  }\n\n  buttonTapped() {\n    this.progress = true;\n    var el = this;\n    var eventData = {\n      domain: this.domain,\n      service: this.service,\n      serviceData: this.serviceData,\n    };\n\n    this.hass.callService(this.domain, this.service, this.serviceData)\n      .then(function () {\n        el.progress = false;\n        el.$.progress.actionSuccess();\n        eventData.success = true;\n      }, function () {\n        el.progress = false;\n        el.$.progress.actionError();\n        eventData.success = false;\n      }).then(function () {\n        el.fire('hass-service-called', eventData);\n      });\n  }\n}\n\ncustomElements.define('ha-call-service-button', HaCallServiceButton);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      .container {\n        position: relative;\n        display: inline-block;\n      }\n\n      paper-button {\n        transition: all 1s;\n      }\n\n      .success paper-button {\n        color: white;\n        background-color: var(--google-green-500);\n        transition: none;\n      }\n\n      .error paper-button {\n        color: white;\n        background-color: var(--google-red-500);\n        transition: none;\n      }\n\n      paper-button[disabled] {\n        color: #c8c8c8;\n      }\n\n      .progress {\n        @apply --layout;\n        @apply --layout-center-center;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      }\n    </style>\n    <div class=\"container\" id=\"container\">\n      <paper-button id=\"button\" disabled=\"[[computeDisabled(disabled, progress)]]\" on-click=\"buttonTapped\">\n        <slot></slot>\n      </paper-button>\n      <template is=\"dom-if\" if=\"[[progress]]\">\n        <div class=\"progress\">\n          <paper-spinner active=\"\"></paper-spinner>\n        </div>\n      </template>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('click', ev => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass('success');\n  }\n\n  actionError() {\n    this.tempClass('error');\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define('ha-progress-button', HaProgressButton);\n","const hassAttributeUtil = {};\n\nhassAttributeUtil.DOMAIN_DEVICE_CLASS = {\n  binary_sensor: [\n    'battery',\n    'cold',\n    'connectivity',\n    'door',\n    'garage_door',\n    'gas',\n    'heat',\n    'light',\n    'lock',\n    'moisture',\n    'motion',\n    'moving',\n    'occupancy',\n    'opening',\n    'plug',\n    'power',\n    'presence',\n    'problem',\n    'safety',\n    'smoke',\n    'sound',\n    'vibration',\n    'window'\n  ],\n  cover: ['garage'],\n  sensor: [\n    'battery',\n    'humidity',\n    'illuminance',\n    'temperature'\n  ],\n};\n\nhassAttributeUtil.UNKNOWN_TYPE = 'json';\nhassAttributeUtil.ADD_TYPE = 'key-value';\n\nhassAttributeUtil.TYPE_TO_TAG = {\n  string: 'ha-customize-string',\n  json: 'ha-customize-string',\n  icon: 'ha-customize-icon',\n  boolean: 'ha-customize-boolean',\n  array: 'ha-customize-array',\n  'key-value': 'ha-customize-key-value',\n};\n\n// Attributes here serve dual purpose:\n// 1) Any key of this object won't be shown in more-info window.\n// 2) Any key which has value other than undefined will appear in customization\n//    config according to its value.\nhassAttributeUtil.LOGIC_STATE_ATTRIBUTES =\n  hassAttributeUtil.LOGIC_STATE_ATTRIBUTES || {\n    entity_picture: undefined,\n    friendly_name: { type: 'string', description: 'Name' },\n    icon: { type: 'icon' },\n    emulated_hue: {\n      type: 'boolean',\n      domains: ['emulated_hue']\n    },\n    emulated_hue_name: {\n      type: 'string',\n      domains: ['emulated_hue']\n    },\n    haaska_hidden: undefined,\n    haaska_name: undefined,\n    homebridge_hidden: { type: 'boolean' },\n    homebridge_name: { type: 'string' },\n    supported_features: undefined,\n    attribution: undefined,\n    custom_ui_more_info: { type: 'string' },\n    custom_ui_state_card: { type: 'string' },\n    device_class: {\n      type: 'array',\n      options: hassAttributeUtil.DOMAIN_DEVICE_CLASS,\n      description: 'Device class',\n      domains: ['binary_sensor', 'cover', 'sensor']\n    },\n    hidden: { type: 'boolean', description: 'Hide from UI' },\n    assumed_state: {\n      type: 'boolean',\n      domains: ['switch', 'light', 'cover', 'climate', 'fan', 'group']\n    },\n    initial_state: {\n      type: 'string',\n      domains: ['automation']\n    },\n    unit_of_measurement: { type: 'string' },\n  };\n\nexport default hassAttributeUtil;\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_items]]\"\n      item-value-path=\"[[itemValuePath]]\"\n      item-label-path=\"[[itemLabelPath]]\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomValue]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[label]]\" class=\"input\" value=\"[[value]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" hidden$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden$=\"[[!items.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n            paper-item {\n              margin: -5px -10px;\n            }\n        </style>\n        <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: '_itemsChanged',\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-combo-box', HaComboBox);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport './ha-combo-box.js';\n\nimport LocalizeMixin from '../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-combo-box label=\"[[localize('ui.components.service-picker.service')]]\" items=\"[[_services]]\" value=\"{{value}}\" allow-custom-value=\"\"></ha-combo-box>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    } else if (oldHass && hass.config.services === oldHass.config.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.config.services).sort().forEach((domain) => {\n      const services = Object.keys(hass.config.services[domain]).sort();\n\n      for (let i = 0; i < services.length; i++) {\n        result.push(`${domain}.${services[i]}`);\n      }\n    });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define('ha-service-picker', HaServicePicker);\n","const documentContainer = document.createElement('template');\ndocumentContainer.setAttribute('style', 'display: none;');\n\ndocumentContainer.innerHTML = `<dom-module id=\"ha-form-style\">\n  <template>\n    <style>\n      .form-group {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        padding: 8px 16px;\n      }\n\n      .form-group label {\n        @apply --layout-flex-2;\n      }\n\n      .form-group .form-control {\n        @apply --layout-flex;\n      }\n\n      .form-group.vertical {\n        @apply --layout-vertical;\n        @apply --layout-start;\n      }\n\n      paper-dropdown-menu.form-control {\n        margin: -9px 0;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild(documentContainer.content);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .header {\n        @apply --paper-font-display1;\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        @apply --paper-font-subhead;\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .header {\n        @apply --paper-font-headline;\n      }\n      .narrow .intro {\n        font-size: 14px;\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    </style>\n    <div class$=\"[[computeContentClasses(isWide)]]\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class$=\"[[computeClasses(isWide)]]\">\n        <div class=\"intro\">\n          <slot name=\"introduction\"></slot>\n        </div>\n        <div class=\"panel flex-auto\">\n          <slot></slot>\n        </div>\n      </div>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = 'content ';\n\n    return isWide ? classes : classes + 'narrow';\n  }\n\n  computeClasses(isWide) {\n    var classes = 'together layout ';\n\n    return classes + (isWide ? 'horizontal' : 'vertical narrow');\n  }\n}\n\ncustomElements.define('ha-config-section', HaConfigSection);\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-textarea.js';\n\n\nexport default class JSONTextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state.isValid = true;\n    this.state.value = JSON.stringify(props.value || {}, null, 2);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(ev) {\n    const value = ev.target.value;\n    let parsed;\n    let isValid;\n\n    try {\n      parsed = JSON.parse(value);\n      isValid = true;\n    } catch (err) {\n      // Invalid JSON\n      isValid = false;\n    }\n\n    this.setState({\n      value,\n      isValid,\n    });\n    if (isValid) {\n      this.props.onChange(parsed);\n    }\n  }\n\n  componentWillReceiveProps({ value }) {\n    if (value === this.props.value) return;\n    this.setState({\n      value: JSON.stringify(value, null, 2),\n      isValid: true,\n    });\n  }\n\n  render({ label }, { value, isValid }) {\n    const style = {\n      minWidth: 300,\n      width: '100%',\n    };\n    if (!isValid) {\n      style.border = '1px solid red';\n    }\n    return (\n      <paper-textarea\n        label={label}\n        value={value}\n        style={style}\n        onvalue-changed={this.onChange}\n      />\n    );\n  }\n}\n","export function onChangeEvent(prop, ev) {\n  const origData = this.props[prop];\n\n  if (ev.target.value === origData[ev.target.name]) {\n    return;\n  }\n\n  const data = Object.assign({}, origData);\n\n  if (ev.target.value) {\n    data[ev.target.name] = ev.target.value;\n  } else {\n    delete data[ev.target.name];\n  }\n\n  this.props.onChange(this.props.index, data);\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\n\nimport JSONTextArea from '../json_textarea.js';\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class EventTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n    this.eventDataChanged = this.eventDataChanged.bind(this);\n  }\n\n  /* eslint-disable camelcase */\n  eventDataChanged(event_data) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { event_data },\n    ));\n  }\n\n  render({ trigger, localize }) {\n    const { event_type, event_data } = trigger;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.event.event_type')}\n          name=\"event_type\"\n          value={event_type}\n          onvalue-changed={this.onChange}\n        />\n        <JSONTextArea\n          label={localize('ui.panel.config.automation.editor.triggers.type.event.event_data')}\n          value={event_data}\n          onChange={this.eventDataChanged}\n        />\n      </div>\n    );\n  }\n}\n\nEventTrigger.defaultConfig = {\n  event_type: '',\n  event_data: {},\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-radio-button/paper-radio-button.js';\nimport '@polymer/paper-radio-group/paper-radio-group.js';\n\nexport default class HassTrigger extends Component {\n  constructor() {\n    super();\n\n    this.radioGroupPicked = this.radioGroupPicked.bind(this);\n  }\n\n  radioGroupPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { event: ev.target.selected },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, localize }) {\n    const { event } = trigger;\n    return (\n      <div>\n        <label id=\"eventlabel\">{localize('ui.panel.config.automation.editor.triggers.type.homeassistant.event')}</label>\n        <paper-radio-group\n          selected={event}\n          aria-labelledby=\"eventlabel\"\n          onpaper-radio-group-changed={this.radioGroupPicked}\n        >\n          <paper-radio-button name=\"start\">{localize('ui.panel.config.automation.editor.triggers.type.homeassistant.start')}</paper-radio-button>\n          <paper-radio-button name=\"shutdown\">{localize('ui.panel.config.automation.editor.triggers.type.homeassistant.shutdown')}</paper-radio-button>\n        </paper-radio-group>\n      </div>\n    );\n  }\n}\n\nHassTrigger.defaultConfig = {\n  event: 'start'\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class MQTTTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, localize }) {\n    const { topic, payload } = trigger;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.mqtt.topic')}\n          name=\"topic\"\n          value={topic}\n          onvalue-changed={this.onChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.mqtt.payload')}\n          name=\"payload\"\n          value={payload}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nMQTTTrigger.defaultConfig = {\n  topic: ''\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-input/paper-textarea.js';\n\nimport '../../../../components/entity/ha-entity-picker.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class NumericStateTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n    this.entityPicked = this.entityPicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, hass, localize }) {\n    const {\n      value_template, entity_id, below, above\n    } = trigger;\n\n    return (\n      <div>\n        <ha-entity-picker\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.numeric_state.above')}\n          name=\"above\"\n          value={above}\n          onvalue-changed={this.onChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.numeric_state.below')}\n          name=\"below\"\n          value={below}\n          onvalue-changed={this.onChange}\n        />\n        <paper-textarea\n          label={localize('ui.panel.config.automation.editor.triggers.type.numeric_state.value_template')}\n          name=\"value_template\"\n          value={value_template}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nNumericStateTrigger.defaultConfig = {\n  entity_id: '',\n};\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-input/paper-input.js';\nimport '../../../../components/entity/ha-entity-picker.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class StateTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n    this.entityPicked = this.entityPicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, hass, localize }) {\n    const { entity_id, to } = trigger;\n    const trgFrom = trigger.from;\n    const trgFor = trigger.for;\n    return (\n      <div>\n        <ha-entity-picker\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.state.from')}\n          name=\"from\"\n          value={trgFrom}\n          onvalue-changed={this.onChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.state.to')}\n          name=\"to\"\n          value={to}\n          onvalue-changed={this.onChange}\n        />\n        {trgFor && <pre>For: {JSON.stringify(trgFor, null, 2)}</pre>}\n      </div>\n    );\n  }\n}\n\nStateTrigger.defaultConfig = {\n  entity_id: '',\n};\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-radio-button/paper-radio-button.js';\nimport '@polymer/paper-radio-group/paper-radio-group.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class SunTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n    this.radioGroupPicked = this.radioGroupPicked.bind(this);\n  }\n\n  radioGroupPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { event: ev.target.selected },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, localize }) {\n    const { offset, event } = trigger;\n    return (\n      <div>\n        <label id=\"eventlabel\">{localize('ui.panel.config.automation.editor.triggers.type.sun.event')}</label>\n        <paper-radio-group\n          selected={event}\n          aria-labelledby=\"eventlabel\"\n          onpaper-radio-group-changed={this.radioGroupPicked}\n        >\n          <paper-radio-button name=\"sunrise\">{localize('ui.panel.config.automation.editor.triggers.type.sun.sunrise')}</paper-radio-button>\n          <paper-radio-button name=\"sunset\">{localize('ui.panel.config.automation.editor.triggers.type.sun.sunset')}</paper-radio-button>\n        </paper-radio-group>\n\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.sun.offset')}\n          name=\"offset\"\n          value={offset}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nSunTrigger.defaultConfig = {\n  event: 'sunrise',\n};\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-input/paper-textarea.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class TemplateTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n  }\n\n  render({ trigger, localize }) {\n    /* eslint-disable camelcase */\n    const { value_template } = trigger;\n    return (\n      <div>\n        <paper-textarea\n          label={localize('ui.panel.config.automation.editor.triggers.type.template.value_template')}\n          name=\"value_template\"\n          value={value_template}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nTemplateTrigger.defaultConfig = {\n  value_template: '',\n};\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-input/paper-input.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class TimeTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, localize }) {\n    const { at } = trigger;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.triggers.type.time.at')}\n          name=\"at\"\n          value={at}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nTimeTrigger.defaultConfig = {\n  at: '',\n};\n","export default function hasLocation(stateObj) {\n  return ('latitude' in stateObj.attributes &&\n          'longitude' in stateObj.attributes);\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-radio-button/paper-radio-button.js';\nimport '@polymer/paper-radio-group/paper-radio-group.js';\nimport '../../../../components/entity/ha-entity-picker.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\nimport hasLocation from '../../../../common/entity/has_location.js';\nimport computeStateDomain from '../../../../common/entity/compute_state_domain.js';\n\nfunction zoneAndLocationFilter(stateObj) {\n  return hasLocation(stateObj) && computeStateDomain(stateObj) !== 'zone';\n}\n\nexport default class ZoneTrigger extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'trigger');\n    this.radioGroupPicked = this.radioGroupPicked.bind(this);\n    this.entityPicked = this.entityPicked.bind(this);\n    this.zonePicked = this.zonePicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  zonePicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { zone: ev.target.value },\n    ));\n  }\n\n  radioGroupPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { event: ev.target.selected },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ trigger, hass, localize }) {\n    const { entity_id, zone, event } = trigger;\n    return (\n      <div>\n        <ha-entity-picker\n          label={localize('ui.panel.config.automation.editor.triggers.type.zone.entity')}\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n          entityFilter={zoneAndLocationFilter}\n        />\n        <ha-entity-picker\n          label={localize('ui.panel.config.automation.editor.triggers.type.zone.zone')}\n          value={zone}\n          onChange={this.zonePicked}\n          hass={hass}\n          allowCustomEntity\n          domainFilter='zone'\n        />\n        <label id=\"eventlabel\">{localize('ui.panel.config.automation.editor.triggers.type.zone.event')}</label>\n        <paper-radio-group\n          selected={event}\n          aria-labelledby=\"eventlabel\"\n          onpaper-radio-group-changed={this.radioGroupPicked}\n        >\n          <paper-radio-button name=\"enter\">{localize('ui.panel.config.automation.editor.triggers.type.zone.enter')}</paper-radio-button>\n          <paper-radio-button name=\"leave\">{localize('ui.panel.config.automation.editor.triggers.type.zone.leave')}</paper-radio-button>\n        </paper-radio-group>\n      </div>\n    );\n  }\n}\n\nZoneTrigger.defaultConfig = {\n  entity_id: '',\n  zone: '',\n  event: 'enter',\n};\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu-light.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\n\nimport EventTrigger from './event.js';\nimport HassTrigger from './homeassistant.js';\nimport MQTTTrigger from './mqtt.js';\nimport NumericStateTrigger from './numeric_state.js';\nimport StateTrigger from './state.js';\nimport SunTrigger from './sun.js';\nimport TemplateTrigger from './template.js';\nimport TimeTrigger from './time.js';\nimport ZoneTrigger from './zone.js';\n\nconst TYPES = {\n  event: EventTrigger,\n  state: StateTrigger,\n  homeassistant: HassTrigger,\n  mqtt: MQTTTrigger,\n  numeric_state: NumericStateTrigger,\n  sun: SunTrigger,\n  template: TemplateTrigger,\n  time: TimeTrigger,\n  zone: ZoneTrigger,\n};\n\nconst OPTIONS = Object.keys(TYPES).sort();\n\nexport default class TriggerEdit extends Component {\n  constructor() {\n    super();\n\n    this.typeChanged = this.typeChanged.bind(this);\n  }\n\n  typeChanged(ev) {\n    const type = ev.target.selectedItem.attributes.platform.value;\n\n    if (type !== this.props.trigger.platform) {\n      this.props.onChange(this.props.index, Object.assign(\n        { platform: type },\n        TYPES[type].defaultConfig\n      ));\n    }\n  }\n\n  render({ index, trigger, onChange, hass, localize }) {\n    const Comp = TYPES[trigger.platform];\n    const selected = OPTIONS.indexOf(trigger.platform);\n\n    if (!Comp) {\n      return (\n        <div>\n          {localize('ui.panel.config.automation.editor.triggers.unsupported_platform', 'platform', trigger.platform)}\n          <pre>{JSON.stringify(trigger, null, 2)}</pre>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <paper-dropdown-menu-light label={localize('ui.panel.config.automation.editor.triggers.type_select')} no-animations>\n          <paper-listbox\n            slot=\"dropdown-content\"\n            selected={selected}\n            oniron-select={this.typeChanged}\n          >\n            {OPTIONS.map(opt => <paper-item platform={opt}>{localize(`ui.panel.config.automation.editor.triggers.type.${opt}.label`)}</paper-item>)}\n          </paper-listbox>\n        </paper-dropdown-menu-light>\n        <Comp\n          index={index}\n          trigger={trigger}\n          onChange={onChange}\n          hass={hass}\n          localize={localize}\n        />\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\n\nimport TriggerEdit from './trigger_edit.js';\n\nexport default class TriggerRow extends Component {\n  constructor() {\n    super();\n\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    // eslint-disable-next-line\n    if (confirm(this.props.localize('ui.panel.config.automation.editor.triggers.delete_confirm'))) {\n      this.props.onChange(this.props.index, null);\n    }\n  }\n\n  render(props) {\n    return (\n      <paper-card>\n        <div class='card-menu'>\n          <paper-menu-button\n            no-animations\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            />\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item disabled>{props.localize('ui.panel.config.automation.editor.triggers.duplicate')}</paper-item>\n              <paper-item onTap={this.onDelete}>{props.localize('ui.panel.config.automation.editor.triggers.delete')}</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </div>\n        <div class='card-content'>\n          <TriggerEdit {...props} />\n        </div>\n      </paper-card>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-button/paper-button.js';\n\nimport TriggerRow from './trigger_row.js';\nimport StateTrigger from './state.js';\n\nexport default class Trigger extends Component {\n  constructor() {\n    super();\n\n    this.addTrigger = this.addTrigger.bind(this);\n    this.triggerChanged = this.triggerChanged.bind(this);\n  }\n\n  addTrigger() {\n    const trigger = this.props.trigger.concat(Object.assign(\n      { platform: 'state' },\n      StateTrigger.defaultConfig,\n    ));\n\n    this.props.onChange(trigger);\n  }\n\n  triggerChanged(index, newValue) {\n    const trigger = this.props.trigger.concat();\n\n    if (newValue === null) {\n      trigger.splice(index, 1);\n    } else {\n      trigger[index] = newValue;\n    }\n\n    this.props.onChange(trigger);\n  }\n\n  render({ trigger, hass, localize }) {\n    return (\n      <div class=\"triggers\">\n        {trigger.map((trg, idx) => (\n          <TriggerRow\n            index={idx}\n            trigger={trg}\n            onChange={this.triggerChanged}\n            hass={hass}\n            localize={localize}\n          />))}\n        <paper-card>\n          <div class='card-actions add-card'>\n            <paper-button onTap={this.addTrigger}>{localize('ui.panel.config.automation.editor.triggers.add')}</paper-button>\n          </div>\n        </paper-card>\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-input/paper-textarea.js';\nimport '../../../../components/entity/ha-entity-picker.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class NumericStateCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n    this.entityPicked = this.entityPicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.condition,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ condition, hass, localize }) {\n    const {\n      value_template, entity_id, below, above\n    } = condition;\n    return (\n      <div>\n        <ha-entity-picker\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.numeric_state.above')}\n          name=\"above\"\n          value={above}\n          onvalue-changed={this.onChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.numeric_state.below')}\n          name=\"below\"\n          value={below}\n          onvalue-changed={this.onChange}\n        />\n        <paper-textarea\n          label={localize('ui.panel.config.automation.editor.conditions.type.numeric_state.value_template')}\n          name=\"value_template\"\n          value={value_template}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nNumericStateCondition.defaultConfig = {\n  entity_id: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport '../../../../components/entity/ha-entity-picker.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class StateCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n    this.entityPicked = this.entityPicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.condition,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ condition, hass, localize }) {\n    const { entity_id, state } = condition;\n    const cndFor = condition.for;\n    return (\n      <div>\n        <ha-entity-picker\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.state.state')}\n          name=\"state\"\n          value={state}\n          onvalue-changed={this.onChange}\n        />\n        {cndFor && <pre>For: {JSON.stringify(cndFor, null, 2)}</pre>}\n      </div>\n    );\n  }\n}\n\nStateCondition.defaultConfig = {\n  entity_id: '',\n  state: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-radio-button/paper-radio-button.js';\nimport '@polymer/paper-radio-group/paper-radio-group.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class SunCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n    this.afterPicked = this.radioGroupPicked.bind(this, 'after');\n    this.beforePicked = this.radioGroupPicked.bind(this, 'before');\n  }\n\n  radioGroupPicked(key, ev) {\n    const condition = Object.assign({}, this.props.condition);\n\n    if (ev.target.selected) {\n      condition[key] = ev.target.selected;\n    } else {\n      delete condition[key];\n    }\n\n    this.props.onChange(this.props.index, condition);\n  }\n\n  render({ condition, localize }) {\n    /* eslint-disable camelcase */\n    const {\n      after, after_offset, before, before_offset\n    } = condition;\n    return (\n      <div>\n        <label id=\"beforelabel\">{localize('ui.panel.config.automation.editor.conditions.type.sun.before')}</label>\n        <paper-radio-group\n          allow-empty-selection\n          selected={before}\n          aria-labelledby=\"beforelabel\"\n          onpaper-radio-group-changed={this.beforePicked}\n        >\n          <paper-radio-button name=\"sunrise\">{localize('ui.panel.config.automation.editor.conditions.type.sun.sunrise')}</paper-radio-button>\n          <paper-radio-button name=\"sunset\">{localize('ui.panel.config.automation.editor.conditions.type.sun.sunset')}</paper-radio-button>\n        </paper-radio-group>\n\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.sun.before_offset')}\n          name=\"before_offset\"\n          value={before_offset}\n          onvalue-changed={this.onChange}\n          disabled={before === undefined}\n        />\n\n        <label id=\"afterlabel\">{localize('ui.panel.config.automation.editor.conditions.type.sun.after')}</label>\n        <paper-radio-group\n          allow-empty-selection\n          selected={after}\n          aria-labelledby=\"afterlabel\"\n          onpaper-radio-group-changed={this.afterPicked}\n        >\n          <paper-radio-button name=\"sunrise\">{localize('ui.panel.config.automation.editor.conditions.type.sun.sunrise')}</paper-radio-button>\n          <paper-radio-button name=\"sunset\">{localize('ui.panel.config.automation.editor.conditions.type.sun.sunset')}</paper-radio-button>\n        </paper-radio-group>\n\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.sun.after_offset')}\n          name=\"after_offset\"\n          value={after_offset}\n          onvalue-changed={this.onChange}\n          disabled={after === undefined}\n        />\n      </div>\n    );\n  }\n}\n\nSunCondition.defaultConfig = {\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-textarea.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class TemplateCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n  }\n\n  render({ condition, localize }) {\n    /* eslint-disable camelcase */\n    const { value_template } = condition;\n    return (\n      <div>\n        <paper-textarea\n          label={localize('ui.panel.config.automation.editor.conditions.type.template.value_template')}\n          name=\"value_template\"\n          value={value_template}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nTemplateCondition.defaultConfig = {\n  value_template: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class TimeCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n  }\n\n  /* eslint-disable camelcase */\n  render({ condition, localize }) {\n    const { after, before } = condition;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.time.after')}\n          name=\"after\"\n          value={after}\n          onvalue-changed={this.onChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.conditions.type.time.before')}\n          name=\"before\"\n          value={before}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nTimeCondition.defaultConfig = {\n};\n","import { h, Component } from 'preact';\nimport '../../../../components/entity/ha-entity-picker.js';\nimport { onChangeEvent } from '../../../../common/preact/event.js';\nimport hasLocation from '../../../../common/entity/has_location.js';\nimport computeStateDomain from '../../../../common/entity/compute_state_domain.js';\n\nfunction zoneAndLocationFilter(stateObj) {\n  return hasLocation(stateObj) && computeStateDomain(stateObj) !== 'zone';\n}\n\nexport default class ZoneCondition extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'condition');\n    this.entityPicked = this.entityPicked.bind(this);\n    this.zonePicked = this.zonePicked.bind(this);\n  }\n\n  entityPicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.condition,\n      { entity_id: ev.target.value },\n    ));\n  }\n\n  zonePicked(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.condition,\n      { zone: ev.target.value },\n    ));\n  }\n\n  /* eslint-disable camelcase */\n  render({ condition, hass, localize }) {\n    const { entity_id, zone } = condition;\n    return (\n      <div>\n        <ha-entity-picker\n          label={localize('ui.panel.config.automation.editor.conditions.type.zone.entity')}\n          value={entity_id}\n          onChange={this.entityPicked}\n          hass={hass}\n          allowCustomEntity\n          entityFilter={zoneAndLocationFilter}\n        />\n        <ha-entity-picker\n          label={localize('ui.panel.config.automation.editor.conditions.type.zone.zone')}\n          value={zone}\n          onChange={this.zonePicked}\n          hass={hass}\n          allowCustomEntity\n          domainFilter='zone'\n        />\n      </div>\n    );\n  }\n}\n\nZoneCondition.defaultConfig = {\n  entity_id: '',\n  zone: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu-light.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-item/paper-item.js';\n\nimport NumericStateCondition from './numeric_state.js';\nimport StateCondition from './state.js';\nimport SunCondition from './sun.js';\nimport TemplateCondition from './template.js';\nimport TimeCondition from './time.js';\nimport ZoneCondition from './zone.js';\n\nconst TYPES = {\n  state: StateCondition,\n  numeric_state: NumericStateCondition,\n  sun: SunCondition,\n  template: TemplateCondition,\n  time: TimeCondition,\n  zone: ZoneCondition,\n};\n\nconst OPTIONS = Object.keys(TYPES).sort();\n\nexport default class ConditionRow extends Component {\n  constructor() {\n    super();\n\n    this.typeChanged = this.typeChanged.bind(this);\n  }\n\n  typeChanged(ev) {\n    const type = ev.target.selectedItem.attributes.condition.value;\n\n    if (type !== this.props.condition.condition) {\n      this.props.onChange(this.props.index, Object.assign(\n        { condition: type },\n        TYPES[type].defaultConfig\n      ));\n    }\n  }\n\n  render({ index, condition, onChange, hass, localize }) {\n    const Comp = TYPES[condition.condition];\n    const selected = OPTIONS.indexOf(condition.condition);\n\n    if (!Comp) {\n      return (\n        <div>\n          {localize('ui.panel.config.automation.editor.conditions.unsupported_condition', 'condition', condition.condition)}\n          <pre>{JSON.stringify(condition, null, 2)}</pre>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <paper-dropdown-menu-light label={localize('ui.panel.config.automation.editor.conditions.type_select')} no-animations>\n          <paper-listbox\n            slot=\"dropdown-content\"\n            selected={selected}\n            oniron-select={this.typeChanged}\n          >\n            {OPTIONS.map(opt => <paper-item condition={opt}>{localize(`ui.panel.config.automation.editor.conditions.type.${opt}.label`)}</paper-item>)}\n          </paper-listbox>\n        </paper-dropdown-menu-light>\n        <Comp\n          index={index}\n          condition={condition}\n          onChange={onChange}\n          hass={hass}\n          localize={localize}\n        />\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-item/paper-item.js';\n\nimport ConditionEdit from './condition_edit.js';\n\nexport default class ConditionRow extends Component {\n  constructor() {\n    super();\n\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    // eslint-disable-next-line\n    if (confirm(this.props.localize('ui.panel.config.automation.editor.conditions.delete_confirm'))) {\n      this.props.onChange(this.props.index, null);\n    }\n  }\n\n  render(props) {\n    return (\n      <paper-card>\n        <div class='card-menu'>\n          <paper-menu-button\n            no-animations\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            />\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item disabled>{props.localize('ui.panel.config.automation.editor.conditions.duplicate')}</paper-item>\n              <paper-item onTap={this.onDelete}>{props.localize('ui.panel.config.automation.editor.conditions.delete')}</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </div>\n        <div class='card-content'>\n          <ConditionEdit {...props} />\n        </div>\n      </paper-card>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-button/paper-button.js';\n\nimport ConditionRow from './condition_row.js';\n\nexport default class Condition extends Component {\n  constructor() {\n    super();\n\n    this.addCondition = this.addCondition.bind(this);\n    this.conditionChanged = this.conditionChanged.bind(this);\n  }\n\n  addCondition() {\n    const condition = this.props.condition.concat({\n      condition: 'state',\n    });\n\n    this.props.onChange(condition);\n  }\n\n  conditionChanged(index, newValue) {\n    const condition = this.props.condition.concat();\n\n    if (newValue === null) {\n      condition.splice(index, 1);\n    } else {\n      condition[index] = newValue;\n    }\n\n    this.props.onChange(condition);\n  }\n\n  render({ condition, hass, localize }) {\n    return (\n      <div class=\"triggers\">\n        {condition.map((cnd, idx) => (\n          <ConditionRow\n            index={idx}\n            condition={cnd}\n            onChange={this.conditionChanged}\n            hass={hass}\n            localize={localize}\n          />))}\n        <paper-card>\n          <div class='card-actions add-card'>\n            <paper-button onTap={this.addCondition}>{localize('ui.panel.config.automation.editor.conditions.add')}</paper-button>\n          </div>\n        </paper-card>\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '../../../../components/ha-service-picker.js';\n\nimport JSONTextArea from '../json_textarea.js';\n\nexport default class CallServiceAction extends Component {\n  constructor() {\n    super();\n\n    this.serviceChanged = this.serviceChanged.bind(this);\n    this.serviceDataChanged = this.serviceDataChanged.bind(this);\n  }\n\n  serviceChanged(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.action,\n      { service: ev.target.value },\n    ));\n  }\n\n  serviceDataChanged(data) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.action,\n      { data },\n    ));\n  }\n\n  render({ action, hass, localize }) {\n    const { service, data } = action;\n\n    return (\n      <div>\n        <ha-service-picker\n          hass={hass}\n          value={service}\n          onChange={this.serviceChanged}\n        />\n        <JSONTextArea\n          label={localize('ui.panel.config.automation.editor.actions.type.service.service_data')}\n          value={data}\n          onChange={this.serviceDataChanged}\n        />\n      </div>\n    );\n  }\n}\n\nCallServiceAction.defaultConfig = {\n  alias: '',\n  service: '',\n  data: {}\n};\n","import { h, Component } from 'preact';\n\nimport StateCondition from '../condition/state.js';\nimport ConditionEdit from '../condition/condition_edit.js';\n\nexport default class ConditionAction extends Component {\n  // eslint-disable-next-line\n  render({ action, index, onChange, hass, localize }) {\n    return (\n      <ConditionEdit\n        condition={action}\n        onChange={onChange}\n        index={index}\n        hass={hass}\n        localize={localize}\n      />\n    );\n  }\n}\n\nConditionAction.defaultConfig = Object.assign(\n  { condition: 'state' },\n  StateCondition.defaultConfig,\n);\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class DelayAction extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'action');\n  }\n\n  render({ action, localize }) {\n    const { delay } = action;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.actions.type.delay.delay')}\n          name=\"delay\"\n          value={delay}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nDelayAction.defaultConfig = {\n  delay: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\n\nimport JSONTextArea from '../json_textarea.js';\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class EventAction extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'action');\n    this.serviceDataChanged = this.serviceDataChanged.bind(this);\n  }\n\n  serviceDataChanged(data) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.action,\n      { data },\n    ));\n  }\n\n  render({ action, localize }) {\n    /* eslint-disable camelcase */\n    const { event, event_data } = action;\n    return (\n      <div>\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.actions.type.event.event')}\n          name=\"event\"\n          value={event}\n          onvalue-changed={this.onChange}\n        />\n        <JSONTextArea\n          label={localize('ui.panel.config.automation.editor.actions.type.event.service_data')}\n          value={event_data}\n          onChange={this.serviceDataChanged}\n        />\n      </div>\n    );\n  }\n}\n\nEventAction.defaultConfig = {\n  event: '',\n  event_data: {},\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-input/paper-textarea.js';\n\nimport { onChangeEvent } from '../../../../common/preact/event.js';\n\nexport default class WaitAction extends Component {\n  constructor() {\n    super();\n\n    this.onChange = onChangeEvent.bind(this, 'action');\n    this.onTemplateChange = this.onTemplateChange.bind(this);\n  }\n\n  // Gets fired on mount. If empty, onChangeEvent removes attribute.\n  // Without the attribute this action is no longer matched to this component.\n  onTemplateChange(ev) {\n    this.props.onChange(this.props.index, Object.assign(\n      {}, this.props.trigger,\n      { [ev.target.name]: ev.target.value },\n    ));\n  }\n\n  render({ action, localize }) {\n    /* eslint-disable camelcase */\n    const { wait_template, timeout } = action;\n    return (\n      <div>\n        <paper-textarea\n          label={localize('ui.panel.config.automation.editor.actions.type.wait_template.wait_template')}\n          name=\"wait_template\"\n          value={wait_template}\n          onvalue-changed={this.onTemplateChange}\n        />\n        <paper-input\n          label={localize('ui.panel.config.automation.editor.actions.type.wait_template.timeout')}\n          name=\"timeout\"\n          value={timeout}\n          onvalue-changed={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nWaitAction.defaultConfig = {\n  wait_template: '',\n  timeout: '',\n};\n","import { h, Component } from 'preact';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu-light.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-item/paper-item.js';\n\nimport CallServiceAction from './call_service.js';\nimport ConditionAction from './condition.js';\nimport DelayAction from './delay.js';\nimport EventAction from './event.js';\nimport WaitAction from './wait.js';\n\nconst TYPES = {\n  service: CallServiceAction,\n  delay: DelayAction,\n  wait_template: WaitAction,\n  condition: ConditionAction,\n  event: EventAction,\n};\n\nconst OPTIONS = Object.keys(TYPES).sort();\n\nfunction getType(action) {\n  const keys = Object.keys(TYPES);\n  for (let i = 0; i < keys.length; i++) {\n    if (keys[i] in action) {\n      return keys[i];\n    }\n  }\n  return null;\n}\n\nexport default class Action extends Component {\n  constructor() {\n    super();\n\n    this.typeChanged = this.typeChanged.bind(this);\n  }\n\n  typeChanged(ev) {\n    const newType = ev.target.selectedItem.attributes.action.value;\n    const oldType = getType(this.props.action);\n\n    if (oldType !== newType) {\n      this.props.onChange(this.props.index, TYPES[newType].defaultConfig);\n    }\n  }\n\n  render({ index, action, onChange, hass, localize }) {\n    const type = getType(action);\n    const Comp = type && TYPES[type];\n    const selected = OPTIONS.indexOf(type);\n\n    if (!Comp) {\n      return (\n        <div>\n          {localize('ui.panel.config.automation.editor.actions.unsupported_action', 'action', type)}\n          <pre>{JSON.stringify(action, null, 2)}</pre>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <paper-dropdown-menu-light label={localize('ui.panel.config.automation.editor.actions.type_select')} no-animations>\n          <paper-listbox\n            slot=\"dropdown-content\"\n            selected={selected}\n            oniron-select={this.typeChanged}\n          >\n            {OPTIONS.map(opt => <paper-item action={opt}>{localize(`ui.panel.config.automation.editor.actions.type.${opt}.label`)}</paper-item>)}\n          </paper-listbox>\n        </paper-dropdown-menu-light>\n        <Comp\n          index={index}\n          action={action}\n          onChange={onChange}\n          hass={hass}\n          localize={localize}\n        />\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\n\nimport ActionEdit from './action_edit.js';\n\nexport default class Action extends Component {\n  constructor() {\n    super();\n\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    // eslint-disable-next-line\n    if (confirm(this.props.localize('ui.panel.config.automation.editor.actions.delete_confirm'))) {\n      this.props.onChange(this.props.index, null);\n    }\n  }\n\n  render(props) {\n    return (\n      <paper-card>\n        <div class='card-menu'>\n          <paper-menu-button\n            no-animations\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            />\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item disabled>{props.localize('ui.panel.config.automation.editor.actions.duplicate')}</paper-item>\n              <paper-item onTap={this.onDelete}>{props.localize('ui.panel.config.automation.editor.actions.delete')}</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </div>\n        <div class='card-content'>\n          <ActionEdit {...props} />\n        </div>\n      </paper-card>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-button/paper-button.js';\n\nimport ActionRow from './action_row.js';\n\nexport default class Script extends Component {\n  constructor() {\n    super();\n\n    this.addAction = this.addAction.bind(this);\n    this.actionChanged = this.actionChanged.bind(this);\n  }\n\n  addAction() {\n    const script = this.props.script.concat({\n      service: '',\n    });\n\n    this.props.onChange(script);\n  }\n\n  actionChanged(index, newValue) {\n    const script = this.props.script.concat();\n\n    if (newValue === null) {\n      script.splice(index, 1);\n    } else {\n      script[index] = newValue;\n    }\n\n    this.props.onChange(script);\n  }\n\n  render({ script, hass, localize }) {\n    return (\n      <div class=\"script\">\n        {script.map((act, idx) => (\n          <ActionRow\n            index={idx}\n            action={act}\n            onChange={this.actionChanged}\n            hass={hass}\n            localize={localize}\n          />))}\n        <paper-card>\n          <div class='card-actions add-card'>\n            <paper-button onTap={this.addAction}>{localize('ui.panel.config.automation.editor.actions.add')}</paper-button>\n          </div>\n        </paper-card>\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '../ha-config-section.js';\nimport '../../../components/ha-markdown.js';\n\nimport Trigger from './trigger/index.js';\nimport Condition from './condition/index.js';\nimport Script from './script/index.js';\n\nexport default class Automation extends Component {\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n    this.triggerChanged = this.triggerChanged.bind(this);\n    this.conditionChanged = this.conditionChanged.bind(this);\n    this.actionChanged = this.actionChanged.bind(this);\n  }\n\n  onChange(ev) {\n    this.props.onChange(Object.assign(\n      {}, this.props.automation,\n      { [ev.target.name]: ev.target.value },\n    ));\n  }\n\n  triggerChanged(trigger) {\n    this.props.onChange(Object.assign(\n      {}, this.props.automation,\n      { trigger },\n    ));\n  }\n\n  conditionChanged(condition) {\n    this.props.onChange(Object.assign(\n      {}, this.props.automation,\n      { condition },\n    ));\n  }\n\n  actionChanged(action) {\n    this.props.onChange(Object.assign(\n      {}, this.props.automation,\n      { action },\n    ));\n  }\n\n  render({ automation, isWide, hass, localize }) {\n    const {\n      alias, trigger, condition, action\n    } = automation;\n\n    return (\n      <div>\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>{alias}</span>\n          <span slot='introduction'>\n            {localize('ui.panel.config.automation.editor.introduction')}\n          </span>\n          <paper-card>\n            <div class='card-content'>\n              <paper-input\n                label={localize('ui.panel.config.automation.editor.alias')}\n                name=\"alias\"\n                value={alias}\n                onvalue-changed={this.onChange}\n              />\n            </div>\n          </paper-card>\n        </ha-config-section>\n\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>{localize('ui.panel.config.automation.editor.triggers.header')}</span>\n          <span slot='introduction'>\n            <ha-markdown content={localize('ui.panel.config.automation.editor.triggers.introduction')} />\n          </span>\n          <Trigger\n            trigger={trigger}\n            onChange={this.triggerChanged}\n            hass={hass}\n            localize={localize}\n          />\n        </ha-config-section>\n\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>{localize('ui.panel.config.automation.editor.conditions.header')}</span>\n          <span slot='introduction'>\n            <ha-markdown content={localize('ui.panel.config.automation.editor.conditions.introduction')} />\n          </span>\n          <Condition\n            condition={condition || []}\n            onChange={this.conditionChanged}\n            hass={hass}\n            localize={localize}\n          />\n        </ha-config-section>\n\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>{localize('ui.panel.config.automation.editor.actions.header')}</span>\n          <span slot='introduction'>\n            <ha-markdown content={localize('ui.panel.config.automation.editor.actions.introduction')} />\n          </span>\n          <Script\n            script={action}\n            onChange={this.actionChanged}\n            hass={hass}\n            localize={localize}\n          />\n        </ha-config-section>\n      </div>\n    );\n  }\n}\n","import { render } from 'preact';\n\nexport default function unmount(mountEl) {\n  render(() => null, mountEl);\n}\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-fab/paper-fab.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { h, render } from 'preact';\n\nimport '../../../layouts/ha-app-layout.js';\n\nimport Automation from '../js/automation.js';\nimport unmountPreact from '../../../common/preact/unmount.js';\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\nfunction AutomationEditor(mountEl, props, mergeEl) {\n  return render(h(Automation, props), mountEl, mergeEl);\n}\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaAutomationEditor extends\n  LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      .errors {\n        padding: 20px;\n        font-weight: bold;\n        color: var(--google-red-500);\n      }\n      .content {\n        padding-bottom: 20px;\n      }\n      paper-card {\n        display: block;\n      }\n      .triggers,\n      .script {\n        margin-top: -16px;\n      }\n      .triggers paper-card,\n      .script paper-card {\n        margin-top: 16px;\n      }\n      .add-card paper-button {\n        display: block;\n        text-align: center;\n      }\n      .card-menu {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 1;\n        color: var(--primary-text-color);\n      }\n      .card-menu paper-item {\n        cursor: pointer;\n      }\n      span[slot=introduction] a {\n        color: var(--primary-color);\n      }\n      paper-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n        margin-bottom: -80px;\n        transition: margin-bottom .3s;\n      }\n\n      paper-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n\n      paper-fab[dirty] {\n        margin-bottom: 0;\n      }\n    </style>\n\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[name]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class=\"content\">\n        <template is=\"dom-if\" if=\"[[errors]]\">\n          <div class=\"errors\">[[errors]]</div>\n        </template>\n        <div id=\"root\"></div>\n      </div>\n      <paper-fab slot=\"fab\" is-wide$=\"[[isWide]]\" dirty$=\"[[dirty]]\" icon=\"hass:content-save\" title=\"[[localize('ui.panel.config.automation.editor.save')]]\" on-click=\"saveAutomation\"></paper-fab>\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_updateComponent',\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      errors: {\n        type: Object,\n        value: null,\n      },\n\n      dirty: {\n        type: Boolean,\n        value: false,\n      },\n\n      config: {\n        type: Object,\n        value: null,\n      },\n\n      automation: {\n        type: Object,\n        observer: 'automationChanged',\n      },\n\n      creatingNew: {\n        type: Boolean,\n        observer: 'creatingNewChanged',\n      },\n\n      name: {\n        type: String,\n        computed: 'computeName(automation, localize)'\n      },\n\n      isWide: {\n        type: Boolean,\n        observer: '_updateComponent',\n      },\n\n      _rendered: {\n        type: Object,\n        value: null,\n      },\n\n      _renderScheduled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  ready() {\n    this.configChanged = this.configChanged.bind(this);\n    super.ready(); // This call will initialize preact.\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._rendered) {\n      unmountPreact(this._rendered);\n      this._rendered = null;\n    }\n  }\n\n  configChanged(config) {\n    // onChange gets called a lot during initial rendering causing recursing calls.\n    if (this._rendered === null) return;\n    this.config = config;\n    this.errors = null;\n    this.dirty = true;\n    this._updateComponent();\n  }\n\n  automationChanged(newVal, oldVal) {\n    if (!newVal) return;\n    if (!this.hass) {\n      setTimeout(() => this.automationChanged(newVal, oldVal), 0);\n      return;\n    }\n    if (oldVal && oldVal.attributes.id === newVal.attributes.id) {\n      return;\n    }\n    this.hass.callApi('get', 'config/automation/config/' + newVal.attributes.id)\n      .then(function (config) {\n        // Normalize data: ensure trigger, action and condition are lists\n        // Happens when people copy paste their automations into the config\n        ['trigger', 'condition', 'action'].forEach(function (key) {\n          var value = config[key];\n          if (value && !Array.isArray(value)) {\n            config[key] = [value];\n          }\n        });\n        this.dirty = false;\n        this.config = config;\n        this._updateComponent();\n      }.bind(this));\n  }\n\n  creatingNewChanged(newVal) {\n    if (!newVal) {\n      return;\n    }\n    this.dirty = false;\n    this.config = {\n      alias: this.localize('ui.panel.config.automation.editor.default_name'),\n      trigger: [\n        { platform: 'state' },\n      ],\n      condition: [],\n      action: [\n        { service: '' },\n      ],\n    };\n    this._updateComponent();\n  }\n\n  backTapped() {\n    if (this.dirty &&\n        // eslint-disable-next-line\n        !confirm(this.localize('ui.panel.config.automation.editor.unsaved_confirm'))) {\n      return;\n    }\n    history.back();\n  }\n\n  _updateComponent() {\n    if (this._renderScheduled || !this.hass || !this.config) return;\n    this._renderScheduled = true;\n    Promise.resolve().then(() => {\n      this._rendered = AutomationEditor(this.$.root, {\n        automation: this.config,\n        onChange: this.configChanged,\n        isWide: this.isWide,\n        hass: this.hass,\n        localize: this.localize,\n      }, this._rendered);\n      this._renderScheduled = false;\n    });\n  }\n\n  saveAutomation() {\n    var id = this.creatingNew ? '' + Date.now() : this.automation.attributes.id;\n    this.hass.callApi('post', 'config/automation/config/' + id, this.config).then(function () {\n      this.dirty = false;\n\n      if (this.creatingNew) {\n        this.navigate(`/config/automation/edit/${id}`, true);\n      }\n    }.bind(this), function (errors) {\n      this.errors = errors.body.message;\n      throw errors;\n    }.bind(this));\n  }\n\n  computeName(automation, localize) {\n    return automation\n      ? computeStateName(automation)\n      : localize('ui.panel.config.automation.editor.default_name');\n  }\n}\n\ncustomElements.define('ha-automation-editor', HaAutomationEditor);\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-fab/paper-fab.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/ha-markdown.js';\nimport '../../../layouts/ha-app-layout.js';\n\nimport '../ha-config-section.js';\n\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\nimport computeStateName from '../../../common/entity/compute_state_name.js';\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaAutomationPicker extends\n  LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        display: block;\n      }\n\n      paper-item {\n        cursor: pointer;\n      }\n\n      paper-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      paper-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n\n      a {\n        color: var(--primary-color);\n      }\n\n      ha-markdown p {\n        margin: 0px;\n      }\n    </style>\n\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[localize('ui.panel.config.automation.caption')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <ha-config-section is-wide=\"[[isWide]]\">\n        <div slot=\"header\">[[localize('ui.panel.config.automation.picker.header')]]</div>\n        <div slot=\"introduction\">\n          <ha-markdown content=\"[[localize('ui.panel.config.automation.picker.introduction')]]\"></ha-markdown>\n        </div>\n\n        <paper-card heading=\"[[localize('ui.panel.config.automation.picker.pick_automation')]]\">\n          <template is=\"dom-if\" if=\"[[!automations.length]]\">\n            <div class=\"card-content\">\n              <p>[[localize('ui.panel.config.automation.picker.no_automations')]]</p>\n            </div>\n          </template>\n          <template is=\"dom-repeat\" items=\"[[automations]]\" as=\"automation\">\n            <paper-item>\n              <paper-item-body two-line=\"\" on-click=\"automationTapped\">\n                <div>[[computeName(automation)]]</div>\n                <div secondary=\"\">[[computeDescription(automation)]]</div>\n              </paper-item-body>\n              <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n            </paper-item>\n          </template>\n        </paper-card>\n      </ha-config-section>\n\n      <paper-fab slot=\"fab\" is-wide$=\"[[isWide]]\" icon=\"hass:plus\" title=\"[[localize('ui.panel.config.automation.picker.add_automation')]]\" on-click=\"addAutomation\"></paper-fab>\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      automations: {\n        type: Array,\n      },\n\n      isWide: {\n        type: Boolean,\n      },\n    };\n  }\n\n  automationTapped(ev) {\n    this.navigate('/config/automation/edit/' + this.automations[ev.model.index].attributes.id);\n  }\n\n  addAutomation() {\n    this.navigate('/config/automation/new');\n  }\n\n  computeName(automation) {\n    return computeStateName(automation);\n  }\n\n  // Still thinking of something to add here.\n  // eslint-disable-next-line\n  computeDescription(automation) {\n    return '';\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('ha-automation-picker', HaAutomationPicker);\n","import '@polymer/app-route/app-route.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-automation-editor.js';\nimport './ha-automation-picker.js';\n\nimport computeStateDomain from '../../../common/entity/compute_state_domain.js';\n\nclass HaConfigAutomation extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      ha-automation-picker,\n      ha-automation-editor {\n        height: 100%;\n      }\n    </style>\n    <app-route route=\"[[route]]\" pattern=\"/automation/edit/:automation\" data=\"{{_routeData}}\" active=\"{{_edittingAutomation}}\"></app-route>\n    <app-route route=\"[[route]]\" pattern=\"/automation/new\" active=\"{{_creatingNew}}\"></app-route>\n\n    <template is=\"dom-if\" if=\"[[!showEditor]]\">\n      <ha-automation-picker hass=\"[[hass]]\" narrow=\"[[narrow]]\" show-menu=\"[[showMenu]]\" automations=\"[[automations]]\" is-wide=\"[[isWide]]\"></ha-automation-picker>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[showEditor]]\" restamp=\"\">\n      <ha-automation-editor hass=\"[[hass]]\" automation=\"[[automation]]\" is-wide=\"[[isWide]]\" creating-new=\"[[_creatingNew]]\"></ha-automation-editor>\n    </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      route: Object,\n      isWide: Boolean,\n      _routeData: Object,\n      _routeMatches: Boolean,\n      _creatingNew: Boolean,\n      _edittingAutomation: Boolean,\n\n      automations: {\n        type: Array,\n        computed: 'computeAutomations(hass)',\n      },\n\n      automation: {\n        type: Object,\n        computed: 'computeAutomation(automations, _edittingAutomation, _routeData)',\n      },\n\n      showEditor: {\n        type: Boolean,\n        computed: 'computeShowEditor(_edittingAutomation, _creatingNew)',\n      }\n    };\n  }\n\n  computeAutomation(automations, edittingAddon, routeData) {\n    if (!automations || !edittingAddon) {\n      return null;\n    }\n    for (var i = 0; i < automations.length; i++) {\n      if (automations[i].attributes.id === routeData.automation) {\n        return automations[i];\n      }\n    }\n    return null;\n  }\n\n  computeAutomations(hass) {\n    var automations = [];\n\n    Object.keys(hass.states).forEach(function (key) {\n      var entity = hass.states[key];\n\n      if (computeStateDomain(entity) === 'automation' &&\n          'id' in entity.attributes) {\n        automations.push(entity);\n      }\n    });\n\n    return automations.sort(function entitySortBy(entityA, entityB) {\n      var nameA = (entityA.attributes.alias ||\n                   entityA.entity_id).toLowerCase();\n      var nameB = (entityB.attributes.alias ||\n                   entityB.entity_id).toLowerCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  computeShowEditor(_edittingAutomation, _creatingNew) {\n    return _creatingNew || _edittingAutomation;\n  }\n}\n\ncustomElements.define('ha-config-automation', HaConfigAutomation);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport './ha-progress-button.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallApiButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-progress-button id=\"progress\" progress=\"[[progress]]\" on-click=\"buttonTapped\" disabled=\"[[disabled]]\"><slot></slot></ha-progress-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      path: String,\n\n      method: {\n        type: String,\n        value: 'POST',\n      },\n\n      data: {\n        type: Object,\n        value: {},\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    this.hass.callApi(this.method, this.path, this.data)\n      .then((resp) => {\n        this.progress = false;\n        this.$.progress.actionSuccess();\n        eventData.success = true;\n        eventData.response = resp;\n      }, (resp) => {\n        this.progress = false;\n        this.$.progress.actionError();\n        eventData.success = false;\n        eventData.response = resp;\n      }).then(() => {\n        this.fire('hass-api-called', eventData);\n      });\n  }\n}\n\ncustomElements.define('ha-call-api-button', HaCallApiButton);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HassSubpage extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\"></style>\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[header]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <slot></slot>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      header: String\n    };\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('hass-subpage', HassSubpage);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-api-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\n\nimport formatDateTime from '../../../common/datetime/format_date_time.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudAccount extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 24px;\n      }\n      paper-card {\n        display: block;\n      }\n      .account-row {\n        display: flex;\n        padding: 0 16px;\n      }\n      paper-button {\n        align-self: center;\n      }\n      .soon {\n        font-style: italic;\n        margin-top: 24px;\n        text-align: center;\n      }\n      .nowrap {\n        white-space: nowrap;;\n      }\n      .wrap {\n        white-space: normal;\n      }\n      .status {\n        text-transform: capitalize;\n        padding: 16px;\n      }\n      paper-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    </style>\n    <hass-subpage header=\"Cloud Account\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Home Assistant Cloud</span>\n          <span slot=\"introduction\">\n            Thank you for supporting Home Assistant. It's because of people like you that we are able to run this project and make a great home automation experience for everyone. Thank you!\n          </span>\n\n          <paper-card heading=\"Account\">\n            <div class=\"account-row\">\n              <paper-item-body two-line=\"\">\n                [[account.email]]\n                <div secondary=\"\" class=\"wrap\">\n                  <span class=\"nowrap\">Subscription expires on </span>\n                  <span class=\"nowrap\">[[_formatExpiration(account.sub_exp)]]</span>\n                </div>\n              </paper-item-body>\n              <paper-button on-click=\"handleLogout\">Sign out</paper-button>\n            </div>\n\n            <div class=\"account-row\">\n              <paper-item-body>\n                Cloud connection status\n              </paper-item-body>\n              <div class=\"status\">[[account.cloud]]</div>\n            </div>\n          </paper-card>\n        </ha-config-section>\n\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Integrations</span>\n          <span slot=\"introduction\">\n            Integrations for Home Assistant Cloud allow you to connect with services in the cloud\n            without having to expose your Home Assistant instance publicly on the internet.\n          </span>\n\n          <paper-card heading=\"Alexa\">\n            <div class=\"card-content\">\n              With the Alexa integration for Home Assistant Cloud you'll be able to control all your Home Assistant devices via any Alexa-enabled device.\n              <ul>\n                <li>\n                  <a href=\"https://alexa.amazon.com/spa/index.html#skills/dp/B0772J1QKB/?ref=skill_dsk_skb_sr_2\" target=\"_blank\">\n                    Activate the Home Assistant skill for Alexa\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://www.home-assistant.io/cloud/alexa/\" target=\"_blank\">\n                    Config documentation\n                  </a>\n                </li>\n              </ul>\n              <p><em>This integration requires an Alexa-enabled device like the Amazon Echo.</em></p>\n            </div>\n          </paper-card>\n\n          <paper-card heading=\"Google Assistant\">\n            <div class=\"card-content\">\n              With the Google Assistant integration for Home Assistant Cloud you'll be able to control all your Home Assistant devices via any Google Assistant-enabled device.\n              <ul>\n                <li>\n                  <a href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875\" target=\"_blank\">\n                    Activate the Home Assistant skill for Google Assistant\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://www.home-assistant.io/cloud/google_assistant/\" target=\"_blank\">\n                    Config documentation\n                  </a>\n                </li>\n              </ul>\n              <p><em>This integration requires a Google Assistant-enabled device like the Google Home or Android phone.</em></p>\n            </div>\n            <div class=\"card-actions\">\n              <ha-call-api-button hass=\"[[hass]]\" path=\"cloud/google_actions/sync\">Sync devices</ha-call-api-button>\n            </div>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      account: {\n        type: Object,\n        observer: '_accountChanged',\n      },\n    };\n  }\n\n  handleLogout() {\n    this.hass.callApi('post', 'cloud/logout').then(() => this.fire('ha-account-refreshed', { account: null }));\n  }\n\n  _formatExpiration(date) {\n    return formatDateTime(new Date(date));\n  }\n\n  _accountChanged(newAccount) {\n    if (!newAccount || newAccount.cloud !== 'connecting') {\n      if (this._accountUpdater) {\n        clearTimeout(this._accountUpdater);\n        this._accountUpdater = null;\n      }\n      return;\n    } else if (this._accountUpdater) {\n      return;\n    }\n    setTimeout(() => {\n      this._accountUpdater = null;\n      this.hass.callApi('get', 'cloud/account')\n        .then(account => this.fire('ha-account-refreshed', { account }));\n    }, 5000);\n  }\n}\n\ncustomElements.define('ha-config-cloud-account', HaConfigCloudAccount);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudForgotPassword extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 24px;\n      }\n\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 0 auto;\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .card-actions a {\n        color: var(--primary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <hass-subpage header=\"Forgot Password\">\n      <div class=\"content\">\n        <paper-card>\n          <div class=\"card-content\">\n            <h1>Forgot your password?</h1>\n            <p>\n              Enter your email address and we will send you a link to reset your password.\n            </p>\n            <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n            <paper-input autofocus=\"\" id=\"email\" label=\"E-mail\" value=\"{{email}}\" type=\"email\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n          </div>\n          <div class=\"card-actions\">\n            <ha-progress-button on-click=\"_handleEmailPasswordReset\" progress=\"[[_requestInProgress]]\">Send reset email</ha-progress-button>\n          </div>\n        </paper-card>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      email: {\n        type: String,\n        notify: true,\n        observer: '_emailChanged'\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _error: {\n        type: String,\n        value: '',\n      }\n    };\n  }\n\n  _emailChanged() {\n    this._error = '';\n    this.$.email.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleEmailPasswordReset();\n      ev.preventDefault();\n    }\n  }\n\n  _handleEmailPasswordReset() {\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n    }\n\n    if (this.$.email.invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/forgot_password', {\n      email: this.email,\n    }).then(() => {\n      this._requestInProgress = false;\n      this.fire('cloud-done', {\n        flashMessage: 'Check your email for instructions on how to reset your password.'\n      });\n    }, err => this.setProperties({\n      _requestInProgress: false,\n      _error: err && err.body && err.body.message ?\n        err.body.message : 'Unknown error',\n    }));\n  }\n}\n\ncustomElements.define('ha-config-cloud-forgot-password', HaConfigCloudForgotPassword);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudLogin extends\n  NavigateMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 24px;\n      }\n      [slot=introduction] a {\n        color: var(--primary-color);\n      }\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n      paper-card:last-child {\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      [hidden] {\n        display: none;\n      }\n      .flash-msg {\n        padding-right: 44px;\n      }\n      .flash-msg paper-icon-button {\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        color: var(--secondary-text-color);\n      }\n    </style>\n    <hass-subpage header=\"Cloud Login\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Home Assistant Cloud</span>\n          <span slot=\"introduction\">\n            The Home Assistant Cloud allows your local Home Assistant instance to connect with cloud-only services like Amazon Alexa.\n            <p><a href=\"https://www.home-assistant.io/components/cloud/\" target=\"_blank\">Learn more</a></p>\n          </span>\n\n          <paper-card hidden$=\"[[!flashMessage]]\">\n            <div class=\"card-content flash-msg\">\n              [[flashMessage]]\n              <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\">Dismiss</paper-icon-button>\n              <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n            </div>\n          </paper-card>\n\n          <paper-card>\n            <div class=\"card-content\">\n              <h1>Sign In</h1>\n              <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              <paper-input label=\"Email\" id=\"email\" type=\"email\" value=\"{{email}}\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n              <paper-input id=\"password\" label=\"Password\" value=\"{{_password}}\" type=\"password\" on-keydown=\"_keyDown\" error-message=\"Passwords are at least 8 characters\"></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button on-click=\"_handleLogin\" progress=\"[[_requestInProgress]]\">Sign in</ha-progress-button>\n              <button class=\"link\" hidden=\"[[_requestInProgress]]\" on-click=\"_handleForgotPassword\">forgot password?</button>\n            </div>\n          </paper-card>\n\n          <paper-card>\n            <paper-item on-click=\"_handleRegister\">\n              <paper-item-body two-line=\"\">\n                Create Account\n                <div secondary=\"\">Get up and running quickly.</div>\n              </paper-item-body>\n              <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n            </paper-item>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: '',\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\n      '_inputChanged(email, _password)'\n    ];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() =>\n          this.$.flashRipple.simulatedRipple()));\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/login', {\n      email: this.email,\n      password: this._password,\n    }).then((account) => {\n      this.fire('ha-account-refreshed', { account: account });\n      this.setProperties({\n        email: '',\n        _password: '',\n      });\n    }, (err) => {\n      // Do this before setProperties because changing it clears errors.\n      this._password = '';\n\n      const errCode = err && err.body && err.body.code;\n      if (errCode === 'PasswordChangeRequired') {\n        alert('You need to change your password before logging in.');\n        this.navigate('/config/cloud/forgot-password');\n        return;\n      }\n\n      const props = {\n        _requestInProgress: false,\n        _error: (err && err.body && err.body.message) ? err.body.message : 'Unknown error',\n      };\n\n      if (errCode === 'UserNotConfirmed') {\n        props._error = 'You need to confirm your email before logging in.';\n      }\n\n      this.setProperties(props);\n      this.$.email.focus();\n    });\n  }\n\n  _handleRegister() {\n    this.flashMessage = '';\n    this.navigate('/config/cloud/register');\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = '';\n    this.navigate('/config/cloud/forgot-password');\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => { this.flashMessage = ''; }, 200);\n  }\n}\n\ncustomElements.define('ha-config-cloud-login', HaConfigCloudLogin);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudRegister extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      a {\n        color: var(--primary-color);\n      }\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n      paper-card:last-child {\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <hass-subpage header=\"Register Account\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Register with the Home Assistant Cloud</span>\n          <span slot=\"introduction\">\n            Register today to easily connect with the Home Assistant Cloud. This will allow you to unlock great new services and functionality, like Amazon Alexa integration.\n\n            <p>\n              By registering an account you agree to the following terms and conditions.\n              </p><ul>\n                <li><a href=\"https://home-assistant.io/tos/\" target=\"_blank\">Terms and Conditions</a></li>\n                <li><a href=\"https://home-assistant.io/privacy/\" target=\"_blank\">Privacy Policy</a></li>\n              </ul>\n            <p></p>\n          </span>\n\n          <paper-card>\n            <div class=\"card-content\">\n              <div class=\"header\">\n                <h1>Register</h1>\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              </div>\n              <paper-input autofocus=\"\" id=\"email\" label=\"Email address\" type=\"email\" value=\"{{email}}\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n              <paper-input id=\"password\" label=\"Password\" value=\"{{_password}}\" type=\"password\" on-keydown=\"_keyDown\" error-message=\"Your password needs to be at least 8 characters\"></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button on-click=\"_handleRegister\" progress=\"[[_requestInProgress]]\">Create Account</ha-progress-button>\n              <button class=\"link\" hidden=\"[[_requestInProgress]]\" on-click=\"_handleResendVerifyEmail\">Resend confirmation email</button>\n            </div>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _password: {\n        type: String,\n        value: '',\n      },\n      _error: {\n        type: String,\n        value: '',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '_inputChanged(email, _password)'\n    ];\n  }\n\n  _inputChanged() {\n    this._error = '';\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleRegister();\n      ev.preventDefault();\n    }\n  }\n\n  _handleRegister() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/register', {\n      email: this.email,\n      password: this._password,\n    }).then(() => this._verificationEmailSent(), (err) => {\n      // Do this before setProperties because changing it clears errors.\n      this._password = '';\n\n      this.setProperties({\n        _requestInProgress: false,\n        _error: err && err.body && err.body.message ? err.body.message : 'Unknown error'\n      });\n    });\n  }\n\n  _handleResendVerifyEmail() {\n    if (!this.email) {\n      this.$.email.invalid = true;\n      return;\n    }\n\n    this.hass.callApi('post', 'cloud/resend_confirm', {\n      email: this.email,\n    }).then(() => this._verificationEmailSent(), err => this.setProperties({\n      _error: err && err.body && err.body.message ? err.body.message : 'Unknown error'\n    }));\n  }\n\n  _verificationEmailSent() {\n    this.setProperties({\n      _requestInProgress: false,\n      _password: '',\n    });\n    this.fire('cloud-done', {\n      flashMessage: 'Account created! Check your email for instructions on how to activate your account.'\n    });\n  }\n}\n\ncustomElements.define('ha-config-cloud-register', HaConfigCloudRegister);\n","import '@polymer/app-route/app-route.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport '../ha-config-section.js';\nimport './ha-config-cloud-account.js';\nimport './ha-config-cloud-forgot-password.js';\nimport './ha-config-cloud-login.js';\nimport './ha-config-cloud-register.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\nconst LOGGED_IN_URLS = [\n  '/cloud/account',\n];\nconst NOT_LOGGED_IN_URLS = [\n  '/cloud/login',\n  '/cloud/register',\n  '/cloud/forgot-password',\n];\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaConfigCloud extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n  <app-route route=\"[[route]]\" pattern=\"/cloud/:page\" data=\"{{_routeData}}\" tail=\"{{_routeTail}}\"></app-route>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;account&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-account hass=\"[[hass]]\" account=\"[[account]]\" is-wide=\"[[isWide]]\"></ha-config-cloud-account>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;login&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-login page-name=\"login\" hass=\"[[hass]]\" is-wide=\"[[isWide]]\" email=\"{{_loginEmail}}\" flash-message=\"{{_flashMessage}}\"></ha-config-cloud-login>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;register&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-register page-name=\"register\" hass=\"[[hass]]\" is-wide=\"[[isWide]]\" email=\"{{_loginEmail}}\"></ha-config-cloud-register>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;forgot-password&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-forgot-password page-name=\"forgot-password\" hass=\"[[hass]]\" email=\"{{_loginEmail}}\"></ha-config-cloud-forgot-password>\n  </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      loadingAccount: {\n        type: Boolean,\n        value: false\n      },\n      account: {\n        type: Object,\n      },\n      _flashMessage: {\n        type: String,\n        value: '',\n      },\n\n      route: Object,\n\n      _routeData: Object,\n      _routeTail: Object,\n      _loginEmail: String,\n    };\n  }\n\n  static get observers() {\n    return [\n      '_checkRoute(route, account)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('cloud-done', (ev) => {\n      this._flashMessage = ev.detail.flashMessage;\n      this.navigate('/config/cloud/login');\n    });\n  }\n\n  _checkRoute(route) {\n    if (!route || route.path.substr(0, 6) !== '/cloud') return;\n\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(0),\n      () => {\n        if (!this.account && !NOT_LOGGED_IN_URLS.includes(route.path)) {\n          this.navigate('/config/cloud/login', true);\n        } else if (this.account && !LOGGED_IN_URLS.includes(route.path)) {\n          this.navigate('/config/cloud/account', true);\n        }\n      }\n    );\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n}\n\ncustomElements.define('ha-config-cloud', HaConfigCloud);\n","import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\nlet registeredDialog = false;\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigManager extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n  <style include=\"iron-flex ha-style\">\n    paper-button {\n      color: var(--primary-color);\n      font-weight: 500;\n      top: 3px;\n      margin-right: -.57em;\n    }\n    paper-card:last-child {\n      margin-top: 12px;\n    }\n    .config-entry-row {\n      display: flex;\n      padding: 0 16px;\n    }\n  </style>\n\n  <hass-subpage header=\"Integrations\">\n    <template is=\"dom-if\" if=\"[[_progress.length]]\">\n      <ha-config-section>\n        <span slot=\"header\">Discovered</span>\n        <paper-card>\n          <template is=\"dom-repeat\" items=\"[[_progress]]\">\n            <div class=\"config-entry-row\">\n              <paper-item-body>\n                [[_computeIntegrationTitle(localize, item.handler)]]\n              </paper-item-body>\n              <paper-button on-click=\"_continueFlow\">Configure</paper-button>\n            </div>\n          </template>\n        </paper-card>\n      </ha-config-section>\n    </template>\n\n    <ha-config-section>\n      <span slot=\"header\">Configured</span>\n      <paper-card>\n        <template is=\"dom-if\" if=\"[[!_entries.length]]\">\n          <div class=\"config-entry-row\">\n            <paper-item-body two-line>\n              <div>Nothing configured yet</div>\n            </paper-item-body>\n          </div>\n        </template>\n        <template is=\"dom-repeat\" items=\"[[_entries]]\">\n          <div class=\"config-entry-row\">\n            <paper-item-body two-line>\n              <div>[[_computeIntegrationTitle(localize, item.domain)]]: [[item.title]]</div>\n              <div secondary>[[item.state]] – added by [[item.source]]</div>\n            </paper-item-body>\n            <paper-button on-click=\"_removeEntry\">Remove</paper-button>\n          </div>\n        </template>\n      </paper-card>\n    </ha-config-section>\n\n    <ha-config-section>\n      <span slot=\"header\">Set up a new integration</span>\n      <paper-card>\n        <template is=\"dom-repeat\" items=\"[[_handlers]]\">\n          <div class=\"config-entry-row\">\n            <paper-item-body>\n              [[_computeIntegrationTitle(localize, item)]]\n            </paper-item-body>\n            <paper-button on-click=\"_createFlow\">Configure</paper-button>\n          </div>\n        </template>\n      </paper-card>\n    </ha-config-section>\n  </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n\n      /**\n       * Existing entries.\n       */\n      _entries: Array,\n\n      /**\n       * Current flows that are in progress and have not been started by a user.\n       * For example, can be discovered devices that require more config.\n       */\n      _progress: Array,\n\n      _handlers: Array,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._loadData();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!registeredDialog) {\n      registeredDialog = true;\n      this.fire('register-dialog', {\n        dialogShowEvent: 'show-config-flow',\n        dialogTag: 'ha-config-flow',\n        dialogImport: () => import('./ha-config-flow.js'),\n      });\n    }\n\n    this.hass.connection.subscribeEvents(() => {\n      this._debouncer = Debouncer.debounce(\n        this._debouncer,\n        timeOut.after(500),\n        () => this._loadData()\n      );\n    }, 'config_entry_discovered').then((unsub) => { this._unsubEvents = unsub; });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) this._unsubEvents();\n  }\n\n  _createFlow(ev) {\n    this.fire('show-config-flow', {\n      hass: this.hass,\n      newFlowForHandler: ev.model.item,\n      dialogClosedCallback: () => this._loadData(),\n    });\n  }\n\n  _continueFlow(ev) {\n    this.fire('show-config-flow', {\n      hass: this.hass,\n      continueFlowId: ev.model.item.flow_id,\n      dialogClosedCallback: () => this._loadData(),\n    });\n  }\n\n  _removeEntry(ev) {\n    if (!confirm('Are you sure you want to delete this integration?')) return;\n\n    const entryId = ev.model.item.entry_id;\n\n    this.hass.callApi('delete', `config/config_entries/entry/${entryId}`)\n      .then((result) => {\n        this._entries = this._entries.filter(entry => entry.entry_id !== entryId);\n        if (result.require_restart) {\n          alert('Restart Home Assistant to finish removing this integration');\n        }\n      });\n  }\n\n  _loadData() {\n    this._loadEntries();\n    this._loadDiscovery();\n    this.hass.callApi('get', 'config/config_entries/flow_handlers')\n      .then((handlers) => { this._handlers = handlers; });\n  }\n\n  _loadEntries() {\n    this.hass.callApi('get', 'config/config_entries/entry')\n      .then((entries) => { this._entries = entries; });\n  }\n\n  _loadDiscovery() {\n    this.hass.callApi('get', 'config/config_entries/flow')\n      .then((progress) => { this._progress = progress; });\n  }\n\n  _computeIntegrationTitle(localize, integration) {\n    return localize(`component.${integration}.config.title`);\n  }\n}\n\ncustomElements.define('ha-config-entries', HaConfigManager);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\n\nimport isComponentLoaded from '../../../common/config/is_component_loaded.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigSectionCore extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .validate-container {\n        @apply --layout-vertical;\n        @apply --layout-center-center;\n        height: 140px;\n      }\n\n      .validate-result {\n        color: var(--google-green-500);\n        font-weight: 500;\n        margin-bottom: 1em;\n      }\n\n      .config-invalid {\n        margin: 1em 0;\n      }\n\n      .config-invalid .text {\n        color: var(--google-red-500);\n        font-weight: 500;\n      }\n\n      .config-invalid paper-button {\n        float: right;\n      }\n\n      .validate-log {\n        white-space: pre-wrap;\n      }\n    </style>\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <span slot=\"header\">[[localize('ui.panel.config.core.section.core.header')]]</span>\n      <span slot=\"introduction\">[[localize('ui.panel.config.core.section.core.introduction')]]</span>\n\n      <paper-card heading=\"[[localize('ui.panel.config.core.section.core.validation.heading')]]\">\n        <div class=\"card-content\">\n          [[localize('ui.panel.config.core.section.core.validation.introduction')]]\n          <template is=\"dom-if\" if=\"[[!validateLog]]\">\n            <div class=\"validate-container\">\n              <template is=\"dom-if\" if=\"[[!validating]]\">\n                <template is=\"dom-if\" if=\"[[isValid]]\">\n                  <div class=\"validate-result\" id=\"result\">\n                    [[localize('ui.panel.config.core.section.core.validation.valid')]]\n                  </div>\n                </template>\n                <paper-button raised=\"\" on-click=\"validateConfig\">\n                  [[localize('ui.panel.config.core.section.core.validation.check_config')]]\n                </paper-button>\n              </template>\n              <template is=\"dom-if\" if=\"[[validating]]\">\n                <paper-spinner active=\"\"></paper-spinner>\n              </template>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[validateLog]]\">\n            <div class=\"config-invalid\">\n              <span class=\"text\">\n                [[localize('ui.panel.config.core.section.core.validation.invalid')]]\n              </span>\n              <paper-button raised=\"\" on-click=\"validateConfig\">\n                [[localize('ui.panel.config.core.section.core.validation.check_config')]]\n              </paper-button>\n            </div>\n            <div id=\"configLog\" class=\"validate-log\">[[validateLog]]</div>\n          </template>\n        </div>\n      </paper-card>\n\n      <paper-card heading=\"[[localize('ui.panel.config.core.section.core.reloading.heading')]]\">\n        <div class=\"card-content\">\n          [[localize('ui.panel.config.core.section.core.reloading.introduction')]]\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"homeassistant\" service=\"reload_core_config\">[[localize('ui.panel.config.core.section.core.reloading.core')]]\n          </ha-call-service-button>\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"group\" service=\"reload\" hidden$=\"[[!groupLoaded(hass)]]\">[[localize('ui.panel.config.core.section.core.reloading.group')]]\n          </ha-call-service-button>\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"automation\" service=\"reload\" hidden$=\"[[!automationLoaded(hass)]]\">[[localize('ui.panel.config.core.section.core.reloading.automation')]]\n          </ha-call-service-button>\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"script\" service=\"reload\" hidden$=\"[[!scriptLoaded(hass)]]\">[[localize('ui.panel.config.core.section.core.reloading.script')]]\n          </ha-call-service-button>\n        </div>\n      </paper-card>\n\n      <paper-card heading=\"[[localize('ui.panel.config.core.section.core.server_management.heading')]]\">\n        <div class=\"card-content\">\n          [[localize('ui.panel.config.core.section.core.server_management.introduction')]]\n        </div>\n        <div class=\"card-actions warning\">\n          <ha-call-service-button class=\"warning\" hass=\"[[hass]]\" domain=\"homeassistant\" service=\"restart\">[[localize('ui.panel.config.core.section.core.server_management.restart')]]\n          </ha-call-service-button>\n          <ha-call-service-button class=\"warning\" hass=\"[[hass]]\" domain=\"homeassistant\" service=\"stop\">[[localize('ui.panel.config.core.section.core.server_management.stop')]]\n          </ha-call-service-button>\n        </div>\n      </paper-card>\n\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n\n      validating: {\n        type: Boolean,\n        value: false,\n      },\n\n      isValid: {\n        type: Boolean,\n        value: null,\n      },\n\n      validateLog: {\n        type: String,\n        value: '',\n      },\n    };\n  }\n\n  groupLoaded(hass) {\n    return isComponentLoaded(hass, 'group');\n  }\n\n  automationLoaded(hass) {\n    return isComponentLoaded(hass, 'automation');\n  }\n\n  scriptLoaded(hass) {\n    return isComponentLoaded(hass, 'script');\n  }\n\n  validateConfig() {\n    this.validating = true;\n    this.validateLog = '';\n    this.isValid = null;\n\n    this.hass.callApi('POST', 'config/core/check_config').then((result) => {\n      this.validating = false;\n      this.isValid = result.result === 'valid';\n\n      if (!this.isValid) {\n        this.validateLog = result.errors;\n      }\n    });\n  }\n}\n\ncustomElements.define('ha-config-section-core', HaConfigSectionCore);\n","import '@polymer/paper-toggle-button/paper-toggle-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPushNotificationsToggle extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <paper-toggle-button hidden$=\"[[!pushSupported]]\" disabled=\"[[loading]]\" checked=\"{{pushChecked}}\"></paper-toggle-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: { type: Object, value: null },\n      pushSupported: {\n        type: Boolean,\n        readOnly: true,\n        notify: true,\n        value: (\n          'serviceWorker' in navigator && 'PushManager' in window &&\n            (document.location.protocol === 'https:' ||\n              document.location.hostname === 'localhost' ||\n              document.location.hostname === '127.0.0.1')\n        )\n      },\n      pushChecked: {\n        type: Boolean,\n        value: 'Notification' in window && Notification.permission === 'granted',\n        observer: 'handlePushChange',\n      },\n      loading: {\n        type: Boolean,\n        value: true,\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.pushSupported) return;\n\n    navigator.serviceWorker.ready.then(\n      (reg) => {\n        reg.pushManager.getSubscription().then((subscription) => {\n          this.loading = false;\n          this.pushChecked = !!subscription;\n        });\n      },\n      () => {\n        // no service worker.\n        this._setPushSupported(false);\n      }\n    );\n  }\n  handlePushChange(pushChecked) {\n    if (!this.pushSupported) return;\n    if (pushChecked) {\n      this.subscribePushNotifications();\n    } else {\n      this.unsubscribePushNotifications();\n    }\n  }\n  subscribePushNotifications() {\n    navigator.serviceWorker.ready\n      .then(reg => reg.pushManager.subscribe({ userVisibleOnly: true }))\n      .then(\n        (sub) => {\n          let browserName;\n          if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n            browserName = 'firefox';\n          } else {\n            browserName = 'chrome';\n          }\n\n          return this.hass.callApi('POST', 'notify.html5', {\n            subscription: sub,\n            browser: browserName\n          });\n        },\n        (err) => {\n          let message;\n          if (err.message && err.message.indexOf('gcm_sender_id') !== -1) {\n            message = 'Please setup the notify.html5 platform.';\n          } else {\n            message = 'Notification registration failed.';\n          }\n\n          /* eslint-disable no-console */\n          console.error(err);\n          /* eslint-enable no-console */\n\n          this.fire('hass-notification', { message: message });\n          this.pushChecked = false;\n        }\n      );\n  }\n  unsubscribePushNotifications() {\n    navigator.serviceWorker.ready\n      .then(reg => reg.pushManager.getSubscription())\n      .then((sub) => {\n        if (!sub) return Promise.resolve();\n\n        return this.hass\n          .callApi('DELETE', 'notify.html5', { subscription: sub })\n          .then(() => {\n            sub.unsubscribe();\n          });\n      })\n      .catch((err) => {\n        /* eslint-disable no-console */\n        console.error('Error in unsub push', err);\n        /* eslint-enable no-console */\n\n        this.fire('hass-notification', {\n          message: 'Failed unsubscribing for push notifications.'\n        });\n      });\n  }\n}\n\ncustomElements.define('ha-push-notifications-toggle', HaPushNotificationsToggle);\n","import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport '@polymer/iron-label/iron-label.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/ha-push-notifications-toggle.js';\n\nimport '../ha-config-section.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigSectionPushNotifications extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex iron-flex-alignment iron-positioning\">\n      ha-push-notifications-toggle {\n        margin-left: 16px;\n      }\n    </style>\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <span slot=\"header\">[[localize('ui.panel.config.core.section.push_notifications.header')]]</span>\n      <span slot=\"introduction\">\n        [[localize('ui.panel.config.core.section.push_notifications.introduction')]]\n      </span>\n\n      <paper-card>\n        <div class=\"card-content\">\n          <iron-label class=\"horizontal layout\">\n            [[localize('ui.panel.config.core.section.push_notifications.push_notifications')]]\n            <ha-push-notifications-toggle hass=\"[[hass]]\" push-supported=\"{{pushSupported}}\"></ha-push-notifications-toggle>\n          </iron-label>\n        </div>\n      </paper-card>\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      pushSupported: {\n        type: Boolean,\n        notify: true,\n      },\n    };\n  }\n}\n\ncustomElements.define('ha-config-section-push-notifications', HaConfigSectionPushNotifications);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigSectionThemes extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <span slot=\"header\">[[localize('ui.panel.config.core.section.themes.header')]]</span>\n      <span slot=\"introduction\">\n        [[localize('ui.panel.config.core.section.themes.introduction')]]\n      </span>\n\n      <paper-card>\n        <div class=\"card-content\">\n          <paper-dropdown-menu label=\"[[localize('ui.panel.config.core.section.themes.header')]]\" dynamic-align=\"\">\n            <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedTheme}}\">\n              <template is=\"dom-repeat\" items=\"[[themes]]\" as=\"theme\">\n                <paper-item>[[theme]]</paper-item>\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n      </paper-card>\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n      },\n\n      themes: {\n        type: Array,\n        computed: 'computeThemes(hass)',\n      },\n\n      selectedTheme: {\n        type: Number,\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      'selectionChanged(hass, selectedTheme)',\n    ];\n  }\n\n  ready() {\n    super.ready();\n    if (this.hass.selectedTheme && this.themes.indexOf(this.hass.selectedTheme) > 0) {\n      this.selectedTheme = this.themes.indexOf(this.hass.selectedTheme);\n    } else if (!this.hass.selectedTheme) {\n      this.selectedTheme = 0;\n    }\n  }\n\n  computeThemes(hass) {\n    if (!hass) return [];\n    return ['Backend-selected', 'default'].concat(Object.keys(hass.themes.themes).sort());\n  }\n\n  selectionChanged(hass, selection) {\n    if (selection > 0 && selection < this.themes.length) {\n      if (hass.selectedTheme !== this.themes[selection]) {\n        this.fire('settheme', this.themes[selection]);\n      }\n    } else if (selection === 0 && hass.selectedTheme !== '') {\n      this.fire('settheme', '');\n    }\n  }\n}\n\ncustomElements.define('ha-config-section-themes', HaConfigSectionThemes);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigSectionTranslation extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <span slot=\"header\">[[localize('ui.panel.config.core.section.translation.header')]]</span>\n      <span slot=\"introduction\">\n        [[localize('ui.panel.config.core.section.translation.introduction')]]\n      </span>\n\n      <paper-card>\n        <div class=\"card-content\">\n          <paper-dropdown-menu label=\"[[localize('ui.panel.config.core.section.translation.language')]]\" dynamic-align=\"\">\n            <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"language-tag\" selected=\"{{languageSelection}}\">\n              <template is=\"dom-repeat\" items=\"[[languages]]\">\n                <paper-item language-tag$=\"[[item.tag]]\">[[item.nativeName]]</paper-item>\n              </template>\n            </paper-listbox>\n          &gt;</paper-dropdown-menu>\n        </div>\n      </paper-card>\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n      },\n      languageSelection: {\n        type: String,\n        observer: 'languageSelectionChanged',\n      },\n      languages: {\n        type: Array,\n        computed: 'computeLanguages(hass)',\n      },\n    };\n  }\n  static get observers() { return ['setLanguageSelection(language)']; }\n\n  computeLanguages(hass) {\n    if (!hass || !hass.translationMetadata) {\n      return [];\n    }\n    return Object.keys(hass.translationMetadata.translations).map(key => ({\n      tag: key,\n      nativeName: hass.translationMetadata.translations[key].nativeName,\n    }));\n  }\n\n  setLanguageSelection(language) {\n    this.languageSelection = language;\n  }\n\n  languageSelectionChanged(newVal) {\n    // Only fire event if language was changed. This prevents select updates when\n    // responding to hass changes.\n    if (newVal !== this.language) {\n      this.fire('hass-language-select', { language: newVal });\n    }\n  }\n}\n\ncustomElements.define('ha-config-section-translation', HaConfigSectionTranslation);\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../layouts/ha-app-layout.js';\nimport '../../../resources/ha-style.js';\n\nimport './ha-config-section-core.js';\nimport './ha-config-section-push-notifications.js';\nimport './ha-config-section-themes.js';\nimport './ha-config-section-translation.js';\n\nimport isComponentLoaded from '../../../common/config/is_component_loaded.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigCore extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 32px;\n      }\n\n      .border {\n        margin: 32px auto 0;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n        max-width: 1040px;\n      }\n\n      .narrow .border {\n        max-width: 640px;\n      }\n    </style>\n\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[localize('ui.panel.config.core.caption')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class$=\"[[computeClasses(isWide)]]\">\n        <ha-config-section-core is-wide=\"[[isWide]]\" hass=\"[[hass]]\"></ha-config-section-core>\n\n        <template is=\"dom-if\" if=\"[[pushSupported]]\">\n          <div class=\"border\"></div>\n          <ha-config-section-push-notifications is-wide=\"[[isWide]]\" hass=\"[[hass]]\" push-supported=\"{{pushSupported}}\"></ha-config-section-push-notifications>\n        </template>\n        <template is=\"dom-if\" if=\"[[computeIsTranslationLoaded(hass)]]\">\n          <div class=\"border\"></div>\n          <ha-config-section-translation is-wide=\"[[isWide]]\" hass=\"[[hass]]\"></ha-config-section-translation>\n        </template>\n\n        <template is=\"dom-if\" if=\"[[computeIsThemesLoaded(hass)]]\">\n          <div class=\"border\"></div>\n          <ha-config-section-themes is-wide=\"[[isWide]]\" hass=\"[[hass]]\"></ha-config-section-themes>\n        </template>\n\n      </div>\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      pushSupported: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  computeClasses(isWide) {\n    return isWide ? 'content' : 'content narrow';\n  }\n\n  computeIsZwaveLoaded(hass) {\n    return isComponentLoaded(hass, 'config.zwave');\n  }\n\n  computeIsTranslationLoaded(hass) {\n    return hass.translationMetadata &&\n      Object.keys(hass.translationMetadata.translations).length;\n  }\n\n  computeIsThemesLoaded(hass) {\n    return hass.themes && hass.themes.themes &&\n      Object.keys(hass.themes.themes).length;\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('ha-config-core', HaConfigCore);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport computeStateName from '../../common/entity/compute_state_name.js';\n\nclass HaEntityConfig extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      paper-card {\n        display: block;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        padding-bottom: 24px;\n      }\n\n      .form-placeholder {\n        @apply --layout-vertical;\n        @apply --layout-center-center;\n        height: 96px;\n      }\n\n      [hidden]: {\n        display: none;\n      }\n\n      .card-actions {\n        @apply --layout-horizontal;\n        @apply --layout-justified;\n      }\n    </style>\n    <paper-card>\n      <div class=\"card-content\">\n        <div class=\"device-picker\">\n          <paper-dropdown-menu label=\"[[label]]\" class=\"flex\" disabled=\"[[!entities.length]]\">\n            <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedEntity}}\">\n              <template is=\"dom-repeat\" items=\"[[entities]]\" as=\"state\">\n                <paper-item>[[computeSelectCaption(state)]]</paper-item>\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n\n        <div class=\"form-container\">\n          <template is=\"dom-if\" if=\"[[computeShowPlaceholder(formState)]]\">\n            <div class=\"form-placeholder\">\n              <template is=\"dom-if\" if=\"[[computeShowNoDevices(formState)]]\">\n                No entities found! :-(\n              </template>\n\n              <template is=\"dom-if\" if=\"[[computeShowSpinner(formState)]]\">\n                <paper-spinner active=\"\" alt=\"[[formState]]\"></paper-spinner>\n                [[formState]]\n              </template>\n            </div>\n          </template>\n\n          <div hidden$=\"[[!computeShowForm(formState)]]\" id=\"form\"></div>\n        </div>\n      </div>\n      <div class=\"card-actions\">\n        <paper-button on-click=\"saveEntity\" disabled=\"[[computeShowPlaceholder(formState)]]\">SAVE</paper-button>\n        <template is=\"dom-if\" if=\"[[allowDelete]]\">\n          <paper-button class=\"warning\" on-click=\"deleteEntity\" disabled=\"[[computeShowPlaceholder(formState)]]\">DELETE</paper-button>\n        </template>\n      </div>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: 'hassChanged',\n      },\n\n      label: {\n        type: String,\n        value: 'Device',\n      },\n\n      entities: {\n        type: Array,\n        observer: 'entitiesChanged',\n      },\n\n      allowDelete: {\n        type: Boolean,\n        value: false,\n      },\n\n      selectedEntity: {\n        type: Number,\n        value: -1,\n        observer: 'entityChanged',\n      },\n\n      formState: {\n        type: String,\n        // no-devices, loading, saving, editing\n        value: 'no-devices',\n      },\n\n      config: {\n        type: Object,\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.formEl = document.createElement(this.config.component);\n    this.formEl.hass = this.hass;\n    this.$.form.appendChild(this.formEl);\n    this.entityChanged(this.selectedEntity);\n  }\n\n  computeSelectCaption(stateObj) {\n    return this.config.computeSelectCaption ?\n      this.config.computeSelectCaption(stateObj) :\n      computeStateName(stateObj);\n  }\n\n  computeShowNoDevices(formState) {\n    return formState === 'no-devices';\n  }\n\n  computeShowSpinner(formState) {\n    return formState === 'loading' || formState === 'saving';\n  }\n\n  computeShowPlaceholder(formState) {\n    return formState !== 'editing';\n  }\n\n  computeShowForm(formState) {\n    return formState === 'editing';\n  }\n\n  hassChanged(hass) {\n    if (this.formEl) {\n      this.formEl.hass = hass;\n    }\n  }\n\n  entitiesChanged(entities, oldEntities) {\n    if (entities.length === 0) {\n      this.formState = 'no-devices';\n      return;\n    } else if (!oldEntities) {\n      this.selectedEntity = 0;\n      return;\n    }\n\n    var oldEntityId = oldEntities[this.selectedEntity].entity_id;\n\n    var newIndex = entities.findIndex(function (ent) {\n      return ent.entity_id === oldEntityId;\n    });\n\n    if (newIndex === -1) {\n      this.selectedEntity = 0;\n    } else if (newIndex !== this.selectedEntity) {\n      // Entity moved index\n      this.selectedEntity = newIndex;\n    }\n  }\n\n  entityChanged(index) {\n    if (!this.entities || !this.formEl) return;\n    var entity = this.entities[index];\n    if (!entity) return;\n\n    this.formState = 'loading';\n    var el = this;\n    this.formEl.loadEntity(entity)\n      .then(function () {\n        el.formState = 'editing';\n      });\n  }\n\n  saveEntity() {\n    this.formState = 'saving';\n    var el = this;\n    this.formEl.saveEntity()\n      .then(function () {\n        el.formState = 'editing';\n      });\n  }\n}\n\ncustomElements.define('ha-entity-config', HaEntityConfig);\n","/**\n * Sort function to help sort states by name\n *\n * Usage:\n *   const states = [state1, state2]\n *   states.sort(statesSortByName);\n */\nimport computeStateName from './compute_state_name.js';\n\nexport default function sortStatesByName(entityA, entityB) {\n  const nameA = computeStateName(entityA);\n  const nameB = computeStateName(entityB);\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n}\n","import '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCustomizeArray extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      paper-dropdown-menu {\n        margin: -9px 0;\n      }\n    </style>\n    <paper-dropdown-menu label=\"[[item.description]]\" disabled=\"[[item.secondary]]\" selected-item-label=\"{{item.value}}\" dynamic-align=\"\">\n      <paper-listbox slot=\"dropdown-content\" selected=\"[[computeSelected(item)]]\">\n        <template is=\"dom-repeat\" items=\"[[getOptions(item)]]\" as=\"option\">\n          <paper-item>[[option]]</paper-item>\n        </template>\n      </paper-listbox>\n    </paper-dropdown-menu>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      }\n    };\n  }\n\n  getOptions(item) {\n    const domain = item.domain || '*';\n    const options = item.options[domain] || item.options['*'];\n    if (!options) {\n      this.item.type = 'string';\n      this.fire('item-changed');\n      return [];\n    }\n    return options.sort();\n  }\n\n  computeSelected(item) {\n    const options = this.getOptions(item);\n    return options.indexOf(item.value);\n  }\n}\ncustomElements.define('ha-customize-array', HaCustomizeArray);\n","import '@polymer/paper-checkbox/paper-checkbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaCustomizeBoolean extends PolymerElement {\n  static get template() {\n    return html`\n    <paper-checkbox disabled=\"[[item.secondary]]\" checked=\"{{item.value}}\">\n      [[item.description]]\n    </paper-checkbox>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      }\n    };\n  }\n}\ncustomElements.define('ha-customize-boolean', HaCustomizeBoolean);\n","import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaCustomizeIcon extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        @apply --layout-horizontal;\n      }\n      .icon-image {\n        border: 1px solid grey;\n        padding: 8px;\n        margin-right: 20px;\n        margin-top: 10px;\n      }\n    </style>\n    <iron-icon class=\"icon-image\" icon=\"[[item.value]]\"></iron-icon>\n    <paper-input disabled=\"[[item.secondary]]\" label=\"icon\" value=\"{{item.value}}\">\n    </paper-input>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      }\n    };\n  }\n}\ncustomElements.define('ha-customize-icon', HaCustomizeIcon);\n","import '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaCustomizeKeyValue extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        @apply --layout-horizontal;\n      }\n      paper-input {\n        @apply --layout-flex;\n      }\n      .key {\n        padding-right: 20px;\n      }\n    </style>\n    <paper-input disabled=\"[[item.secondary]]\" class=\"key\" label=\"Attribute name\" value=\"{{item.attribute}}\">\n    </paper-input>\n    <paper-input disabled=\"[[item.secondary]]\" label=\"Attribute value\" value=\"{{item.value}}\">\n    </paper-input>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      }\n    };\n  }\n}\ncustomElements.define('ha-customize-key-value', HaCustomizeKeyValue);\n","import '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaCustomizeString extends PolymerElement {\n  static get template() {\n    return html`\n    <paper-input disabled=\"[[item.secondary]]\" label=\"[[getLabel(item)]]\" value=\"{{item.value}}\">\n    </paper-input>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      }\n    };\n  }\n\n  getLabel(item) {\n    return item.description + (item.type === 'json' ? ' (JSON formatted)' : '');\n  }\n}\ncustomElements.define('ha-customize-string', HaCustomizeString);\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport hassAttributeUtil from '../../../util/hass-attributes-util.js';\nimport '../ha-form-style.js';\nimport './types/ha-customize-array.js';\nimport './types/ha-customize-boolean.js';\nimport './types/ha-customize-icon.js';\nimport './types/ha-customize-key-value.js';\nimport './types/ha-customize-string.js';\n\nclass HaCustomizeAttribute extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-form-style\">\n      :host {\n        display: block;\n        position: relative;\n        padding-right: 40px;\n      }\n\n      .button {\n        position: absolute;\n        margin-top: -20px;\n        top: 50%;\n        right: 0;\n      }\n    </style>\n    <div id=\"wrapper\" class=\"form-group\"></div>\n    <paper-icon-button class=\"button\" icon=\"[[getIcon(item.secondary)]]\" on-click=\"tapButton\"></paper-icon-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notify: true,\n        observer: 'itemObserver',\n      }\n    };\n  }\n\n  tapButton() {\n    if (this.item.secondary) {\n      this.item = Object.assign({}, this.item, { secondary: false });\n    } else {\n      this.item = Object.assign({}, this.item, { closed: true });\n    }\n  }\n\n  getIcon(secondary) {\n    return secondary ? 'hass:pencil' : 'hass:close';\n  }\n\n  itemObserver(item) {\n    const wrapper = this.$.wrapper;\n    const tag = hassAttributeUtil.TYPE_TO_TAG[item.type].toUpperCase();\n    let child;\n    if (wrapper.lastChild && wrapper.lastChild.tagName === tag) {\n      child = wrapper.lastChild;\n    } else {\n      if (wrapper.lastChild) {\n        wrapper.removeChild(wrapper.lastChild);\n      }\n      // Creating an element with upper case works fine in Chrome, but in FF it doesn't immediately\n      // become a defined Custom Element. Polymer does that in some later pass.\n      this.$.child = child = document.createElement(tag.toLowerCase());\n      child.className = 'form-control';\n      child.addEventListener('item-changed', () => {\n        this.item = Object.assign({}, child.item);\n      });\n    }\n    child.setProperties({ item: this.item });\n    if (child.parentNode === null) {\n      wrapper.appendChild(child);\n    }\n  }\n}\ncustomElements.define('ha-customize-attribute', HaCustomizeAttribute);\n","import { MutableData } from '@polymer/polymer/lib/mixins/mutable-data.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-customize-attribute.js';\n\nclass HaFormCustomizeAttributes extends MutableData(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <template is=\"dom-repeat\" items=\"{{attributes}}\" mutable-data=\"\">\n      <ha-customize-attribute item=\"{{item}}\" hidden$=\"[[item.closed]]\">\n      </ha-customize-attribute>\n    </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      attributes: {\n        type: Array,\n        notify: true,\n      },\n    };\n  }\n}\ncustomElements.define('ha-form-customize-attributes', HaFormCustomizeAttributes);\n","import '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport hassAttributeUtil from '../../../util/hass-attributes-util.js';\nimport './ha-form-customize-attributes.js';\n\nimport computeStateDomain from '../../../common/entity/compute_state_domain';\n\nclass HaFormCustomize extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style ha-form-style\">\n      .warning {\n        color: red;\n      }\n\n      .attributes-text {\n        padding-left: 20px;\n      }\n    </style>\n    <template is=\"dom-if\" if=\"[[computeShowWarning(localConfig, globalConfig)]]\">\n      <div class=\"warning\">\n        It seems that your configuration.yaml doesn't properly include customize.yaml<br>\n        Changes made here won't affect your configuration.\n      </div>\n    </template>\n    <template is=\"dom-if\" if=\"[[hasLocalAttributes]]\">\n      <h4 class=\"attributes-text\">\n        The following attributes are already set in customize.yaml<br>\n      </h4>\n      <ha-form-customize-attributes attributes=\"{{localAttributes}}\"></ha-form-customize-attributes>\n    </template>\n    <template is=\"dom-if\" if=\"[[hasGlobalAttributes]]\">\n      <h4 class=\"attributes-text\">\n        The following attributes are customized from outside of customize.yaml<br>\n        Possibly via a domain, a glob or a different include.\n      </h4>\n      <ha-form-customize-attributes attributes=\"{{globalAttributes}}\"></ha-form-customize-attributes>\n    </template>\n    <template is=\"dom-if\" if=\"[[hasExistingAttributes]]\">\n      <h4 class=\"attributes-text\">\n        The following attributes of the entity are set programatically.<br>\n        You can override them if you like.\n      </h4>\n      <ha-form-customize-attributes attributes=\"{{existingAttributes}}\"></ha-form-customize-attributes>\n    </template>\n    <template is=\"dom-if\" if=\"[[hasNewAttributes]]\">\n      <h4 class=\"attributes-text\">\n        The following attributes weren't set. Set them if you like.\n      </h4>\n      <ha-form-customize-attributes attributes=\"{{newAttributes}}\"></ha-form-customize-attributes>\n    </template>\n    <div class=\"form-group\">\n      <paper-dropdown-menu label=\"Pick an attribute to override\" class=\"flex\" dynamic-align=\"\">\n        <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedNewAttribute}}\">\n          <template is=\"dom-repeat\" items=\"[[newAttributesOptions]]\" as=\"option\">\n            <paper-item>[[option]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      entity: Object,\n\n      localAttributes: {\n        type: Array,\n        computed: 'computeLocalAttributes(localConfig)',\n      },\n      hasLocalAttributes: Boolean,\n\n      globalAttributes: {\n        type: Array,\n        computed: 'computeGlobalAttributes(localConfig, globalConfig)',\n      },\n      hasGlobalAttributes: Boolean,\n\n      existingAttributes: {\n        type: Array,\n        computed: 'computeExistingAttributes(localConfig, globalConfig, entity)',\n      },\n      hasExistingAttributes: Boolean,\n\n      newAttributes: {\n        type: Array,\n        value: [],\n      },\n      hasNewAttributes: Boolean,\n\n      newAttributesOptions: Array,\n      selectedNewAttribute: {\n        type: Number,\n        value: -1,\n        observer: 'selectedNewAttributeObserver',\n      },\n\n      localConfig: Object,\n      globalConfig: Object,\n    };\n  }\n\n  static get observers() {\n    return [\n      'attributesObserver(localAttributes.*, globalAttributes.*, existingAttributes.*, newAttributes.*)',\n    ];\n  }\n\n  _initOpenObject(key, value, secondary, config) {\n    return Object.assign({\n      attribute: key,\n      value: value,\n      closed: false,\n      domain: computeStateDomain(this.entity),\n      secondary: secondary,\n      description: key,\n    }, config);\n  }\n\n  loadEntity(entity) {\n    this.entity = entity;\n    return this.hass.callApi('GET', 'config/customize/config/' + entity.entity_id)\n      .then((data) => {\n        this.localConfig = data.local;\n        this.globalConfig = data.global;\n        this.newAttributes = [];\n      });\n  }\n\n  saveEntity() {\n    const data = {};\n    const attrs = this.localAttributes\n      .concat(this.globalAttributes, this.existingAttributes, this.newAttributes);\n    attrs.forEach((attr) => {\n      if (attr.closed || attr.secondary || !attr.attribute || !attr.value) return;\n      const value = attr.type === 'json' ? JSON.parse(attr.value) : attr.value;\n      if (!value) return;\n      data[attr.attribute] = value;\n    });\n\n    const objectId = this.entity.entity_id;\n    return this.hass.callApi('POST', 'config/customize/config/' + objectId, data);\n  }\n\n  _computeSingleAttribute(key, value, secondary) {\n    const config = hassAttributeUtil.LOGIC_STATE_ATTRIBUTES[key]\n        || { type: hassAttributeUtil.UNKNOWN_TYPE };\n    return this._initOpenObject(key, config.type === 'json' ? JSON.stringify(value) : value, secondary, config);\n  }\n\n  _computeAttributes(config, keys, secondary) {\n    return keys.map(key => this._computeSingleAttribute(key, config[key], secondary));\n  }\n\n  computeLocalAttributes(localConfig) {\n    if (!localConfig) return [];\n    const localKeys = Object.keys(localConfig);\n    const result = this._computeAttributes(localConfig, localKeys, false);\n    return result;\n  }\n\n  computeGlobalAttributes(localConfig, globalConfig) {\n    if (!localConfig || !globalConfig) return [];\n    const localKeys = Object.keys(localConfig);\n    const globalKeys = Object.keys(globalConfig).filter(key => !localKeys.includes(key));\n    return this._computeAttributes(globalConfig, globalKeys, true);\n  }\n\n  computeExistingAttributes(localConfig, globalConfig, entity) {\n    if (!localConfig || !globalConfig || !entity) return [];\n    const localKeys = Object.keys(localConfig);\n    const globalKeys = Object.keys(globalConfig);\n    const entityKeys = Object.keys(entity.attributes)\n      .filter(key => !localKeys.includes(key) && !globalKeys.includes(key));\n    return this._computeAttributes(entity.attributes, entityKeys, true);\n  }\n\n  computeShowWarning(localConfig, globalConfig) {\n    if (!localConfig || !globalConfig) return false;\n    return Object.keys(localConfig)\n      .some(key => JSON.stringify(globalConfig[key]) !== JSON.stringify(localConfig[key]));\n  }\n\n  filterFromAttributes(attributes) {\n    return key => !attributes || attributes.every(attr => attr.attribute !== key || attr.closed);\n  }\n\n  getNewAttributesOptions(localAttributes, globalAttributes, existingAttributes, newAttributes) {\n    const knownKeys =\n        Object.keys(hassAttributeUtil.LOGIC_STATE_ATTRIBUTES)\n          .filter((key) => {\n            const conf = hassAttributeUtil.LOGIC_STATE_ATTRIBUTES[key];\n            return conf && (!conf.domains || !this.entity ||\n                              conf.domains.includes(computeStateDomain(this.entity)));\n          })\n          .filter(this.filterFromAttributes(localAttributes))\n          .filter(this.filterFromAttributes(globalAttributes))\n          .filter(this.filterFromAttributes(existingAttributes))\n          .filter(this.filterFromAttributes(newAttributes));\n    return knownKeys.sort().concat('Other');\n  }\n\n  selectedNewAttributeObserver(selected) {\n    if (selected < 0) return;\n    const option = this.newAttributesOptions[selected];\n    if (selected === this.newAttributesOptions.length - 1) {\n      // The \"Other\" option.\n      const attr = this._initOpenObject('', '', false /* secondary */, { type: hassAttributeUtil.ADD_TYPE });\n      this.push('newAttributes', attr);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    let result = this.localAttributes.findIndex(attr => attr.attribute === option);\n    if (result >= 0) {\n      this.set('localAttributes.' + result + '.closed', false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.globalAttributes.findIndex(attr => attr.attribute === option);\n    if (result >= 0) {\n      this.set('globalAttributes.' + result + '.closed', false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.existingAttributes.findIndex(attr => attr.attribute === option);\n    if (result >= 0) {\n      this.set('existingAttributes.' + result + '.closed', false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.newAttributes.findIndex(attr => attr.attribute === option);\n    if (result >= 0) {\n      this.set('newAttributes.' + result + '.closed', false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    const attr = this._computeSingleAttribute(option, '', false /* secondary */);\n    this.push('newAttributes', attr);\n    this.selectedNewAttribute = -1;\n  }\n\n  attributesObserver() {\n    this.hasLocalAttributes =\n        this.localAttributes && this.localAttributes.some(attr => !attr.closed);\n    this.hasGlobalAttributes =\n        this.globalAttributes && this.globalAttributes.some(attr => !attr.closed);\n    this.hasExistingAttributes =\n        this.existingAttributes && this.existingAttributes.some(attr => !attr.closed);\n    this.hasNewAttributes =\n        this.newAttributes && this.newAttributes.some(attr => !attr.closed);\n    this.newAttributesOptions = this.getNewAttributesOptions(\n      this.localAttributes,\n      this.globalAttributes,\n      this.existingAttributes,\n      this.newAttributes\n    );\n  }\n}\ncustomElements.define('ha-form-customize', HaFormCustomize);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\nimport '../ha-entity-config.js';\nimport './ha-form-customize.js';\n\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport computeStateDomain from '../../../common/entity/compute_state_domain.js';\nimport sortByName from '../../../common/entity/states_sort_by_name.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigCustomize extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n    </style>\n\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[localize('ui.panel.config.customize.caption')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class$=\"[[computeClasses(isWide)]]\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Customization</span>\n          <span slot=\"introduction\">\n            Tweak per-entity attributes.<br>\n            Added/edited customizations will take effect immediately. Removed customizations will take effect when the entity is updated.\n          </span>\n          <ha-entity-config hass=\"[[hass]]\" label=\"Entity\" entities=\"[[entities]]\" config=\"[[entityConfig]]\">\n          </ha-entity-config>\n        </ha-config-section>\n      </div>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n\n      entities: {\n        type: Array,\n        computed: 'computeEntities(hass)',\n      },\n\n      entityConfig: {\n        type: Object,\n        value: {\n          component: 'ha-form-customize',\n          computeSelectCaption: stateObj =>\n            computeStateName(stateObj) + ' (' + computeStateDomain(stateObj) + ')'\n        }\n      },\n    };\n  }\n\n  computeClasses(isWide) {\n    return isWide ? 'content' : 'content narrow';\n  }\n\n  _backTapped() {\n    history.back();\n  }\n\n  computeEntities(hass) {\n    return Object.keys(hass.states)\n      .map(key => hass.states[key])\n      .sort(sortByName);\n  }\n}\ncustomElements.define('ha-config-customize', HaConfigCustomize);\n","import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaConfigCloudMenu extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex\">\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n    </style>\n    <paper-card>\n      <paper-item on-click=\"_navigate\">\n        <paper-item-body two-line=\"\">\n          Home Assistant Cloud\n          <template is=\"dom-if\" if=\"[[account]]\">\n            <div secondary=\"\">Logged in as [[account.email]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!account]]\">\n            <div secondary=\"\">Not logged in</div>\n          </template>\n        </paper-item-body>\n        <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n      </paper-item>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      account: Object,\n    };\n  }\n\n  _navigate() {\n    this.navigate('/config/cloud');\n  }\n}\n\ncustomElements.define('ha-config-cloud-menu', HaConfigCloudMenu);\n","import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaConfigEntriesMenu extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex\">\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n    </style>\n    <paper-card>\n      <paper-item on-click=\"_navigate\">\n        <paper-item-body two-line=\"\">\n          Integrations\n          <div secondary=\"\">Manage connected devices and services</div>\n        </paper-item-body>\n        <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n      </paper-item>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      account: Object,\n    };\n  }\n\n  _navigate() {\n    this.navigate('/config/integrations');\n  }\n}\n\ncustomElements.define('ha-config-entries-menu', HaConfigEntriesMenu);\n","import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\nimport isComponentLoaded from '../../../common/config/is_component_loaded.js';\n\nconst CORE_PAGES = [\n  'core',\n  'customize',\n];\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaConfigNavigation extends\n  LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n  <style include=\"iron-flex\">\n    paper-card {\n      display: block;\n    }\n    paper-item {\n      cursor: pointer;\n    }\n  </style>\n  <paper-card>\n    <template is=\"dom-repeat\" items=\"[[pages]]\">\n      <template is=\"dom-if\" if=\"[[_computeLoaded(hass, item)]]\">\n        <paper-item on-click=\"_navigate\">\n          <paper-item-body two-line=\"\">\n            [[_computeCaption(item, localize)]]\n            <div secondary=\"\">[[_computeDescription(item, localize)]]</div>\n          </paper-item-body>\n          <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n        </paper-item>\n      </template>\n    </template>\n  </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      pages: {\n        type: Array,\n        value: [\n          'core',\n          'customize',\n          'automation',\n          'script',\n          'zwave',\n        ],\n      }\n    };\n  }\n\n  _computeLoaded(hass, page) {\n    return CORE_PAGES.includes(page) || isComponentLoaded(hass, page);\n  }\n\n  _computeCaption(page, localize) {\n    return localize(`ui.panel.config.${page}.caption`);\n  }\n\n  _computeDescription(page, localize) {\n    return localize(`ui.panel.config.${page}.description`);\n  }\n\n  _navigate(ev) {\n    this.navigate('/config/' + ev.model.item);\n  }\n}\n\ncustomElements.define('ha-config-navigation', HaConfigNavigation);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/ha-menu-button.js';\n\nimport '../ha-config-section.js';\nimport './ha-config-cloud-menu.js';\nimport './ha-config-entries-menu.js';\nimport './ha-config-navigation.js';\n\nimport isComponentLoaded from '../../../common/config/is_component_loaded.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigDashboard extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 32px;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <ha-menu-button narrow=\"[[narrow]]\" show-menu=\"[[showMenu]]\"></ha-menu-button>\n          <div main-title=\"\">[[localize('panel.configuration')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">[[localize('ui.panel.config.header')]]</span>\n          <span slot=\"introduction\">[[localize('ui.panel.config.introduction')]]</span>\n\n          <template is=\"dom-if\" if=\"[[computeIsLoaded(hass, &quot;cloud&quot;)]]\">\n            <ha-config-cloud-menu hass=\"[[hass]]\" account=\"[[account]]\"></ha-config-cloud-menu>\n          </template>\n\n          <template is=\"dom-if\" if=\"[[computeIsLoaded(hass, &quot;config.config_entries&quot;)]]\">\n            <ha-config-entries-menu hass=\"[[hass]]\"></ha-config-entries-menu>\n          </template>\n\n          <ha-config-navigation hass=\"[[hass]]\"></ha-config-navigation>\n        </ha-config-section>\n      </div>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      account: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n    };\n  }\n\n  computeIsLoaded(hass, component) {\n    return isComponentLoaded(hass, component);\n  }\n}\n\ncustomElements.define('ha-config-dashboard', HaConfigDashboard);\n","import { h, Component } from 'preact';\n\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '../ha-config-section.js';\n\nimport Script from './script/index.js';\n\nexport default class ScriptEditor extends Component {\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n    this.sequenceChanged = this.sequenceChanged.bind(this);\n  }\n\n  onChange(ev) {\n    this.props.onChange(Object.assign(\n      {}, this.props.script,\n      { [ev.target.name]: ev.target.value }\n    ));\n  }\n\n  sequenceChanged(sequence) {\n    this.props.onChange(Object.assign(\n      {}, this.props.script,\n      { sequence },\n    ));\n  }\n\n  render({ script, isWide, hass, localize }) {\n    const { alias, sequence } = script;\n\n    return (\n      <div>\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>{alias}</span>\n          <span slot='introduction'>\n            Use scripts to execute a sequence of actions.\n          </span>\n          <paper-card>\n            <div class='card-content'>\n              <paper-input\n                label=\"Name\"\n                name=\"alias\"\n                value={alias}\n                onvalue-changed={this.onChange}\n              />\n            </div>\n          </paper-card>\n        </ha-config-section>\n\n        <ha-config-section is-wide={isWide}>\n          <span slot='header'>Sequence</span>\n          <span slot='introduction'>\n            The sequence of actions of this script.\n            <p><a href=\"https://home-assistant.io/docs/scripts/\" target=\"_blank\">\n              Learn more about available actions.\n            </a></p>\n          </span>\n          <Script\n            script={sequence}\n            onChange={this.sequenceChanged}\n            hass={hass}\n            localize={localize}\n          />\n        </ha-config-section>\n      </div>\n    );\n  }\n}\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-fab/paper-fab.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { h, render } from 'preact';\n\nimport '../../../layouts/ha-app-layout.js';\n\nimport Script from '../js/script.js';\nimport unmountPreact from '../../../common/preact/unmount.js';\n\nimport computeObjectId from '../../../common/entity/compute_object_id.js';\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\nfunction ScriptEditor(mountEl, props, mergeEl) {\n  return render(h(Script, props), mountEl, mergeEl);\n}\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaScriptEditor extends\n  LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      .errors {\n        padding: 20px;\n        font-weight: bold;\n        color: var(--google-red-500);\n      }\n      .content {\n        padding-bottom: 20px;\n      }\n      paper-card {\n        display: block;\n      }\n      .triggers,\n      .script {\n        margin-top: -16px;\n      }\n      .triggers paper-card,\n      .script paper-card {\n        margin-top: 16px;\n      }\n      .add-card paper-button {\n        display: block;\n        text-align: center;\n      }\n      .card-menu {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 1;\n        color: var(--primary-text-color);\n      }\n      .card-menu paper-item {\n        cursor: pointer;\n      }\n      span[slot=introduction] a {\n        color: var(--primary-color);\n      }\n      paper-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n        margin-bottom: -80px;\n        transition: margin-bottom .3s;\n      }\n\n      paper-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n\n      paper-fab[dirty] {\n        margin-bottom: 0;\n      }\n    </style>\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"backTapped\"></paper-icon-button>\n          <div main-title=\"\">Script [[name]]</div>\n        </app-toolbar>\n      </app-header>\n      <div class=\"content\">\n        <template is=\"dom-if\" if=\"[[errors]]\">\n          <div class=\"errors\">[[errors]]</div>\n        </template>\n        <div id=\"root\"></div>\n      </div>\n      <paper-fab slot=\"fab\" is-wide$=\"[[isWide]]\" dirty$=\"[[dirty]]\" icon=\"hass:content-save\" title=\"Save\" on-click=\"saveScript\"></paper-fab>\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      errors: {\n        type: Object,\n        value: null,\n      },\n\n      dirty: {\n        type: Boolean,\n        value: false,\n      },\n\n      config: {\n        type: Object,\n        value: null,\n      },\n\n      script: {\n        type: Object,\n        observer: 'scriptChanged',\n      },\n\n      creatingNew: {\n        type: Boolean,\n        observer: 'creatingNewChanged',\n      },\n\n      name: {\n        type: String,\n        computed: 'computeName(script)'\n      },\n\n      isWide: {\n        type: Boolean,\n        observer: '_updateComponent',\n      },\n\n      _rendered: {\n        type: Object,\n        value: null,\n      },\n\n      _renderScheduled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  ready() {\n    this.configChanged = this.configChanged.bind(this);\n    super.ready(); // This call will initialize preact.\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._rendered) {\n      unmountPreact(this._rendered);\n      this._rendered = null;\n    }\n  }\n\n  configChanged(config) {\n    // onChange gets called a lot during initial rendering causing recursing calls.\n    if (this._rendered === null) return;\n    this.config = config;\n    this.errors = null;\n    this.dirty = true;\n    this._updateComponent();\n  }\n\n  scriptChanged(newVal, oldVal) {\n    if (!newVal) return;\n    if (!this.hass) {\n      setTimeout(() => this.scriptChanged(newVal, oldVal), 0);\n      return;\n    }\n    if (oldVal && oldVal.entity_id === newVal.entity_id) {\n      return;\n    }\n    this.hass.callApi('get', 'config/script/config/' + computeObjectId(newVal.entity_id))\n      .then((config) => {\n        // Normalize data: ensure sequence is a list\n        // Happens when people copy paste their scripts into the config\n        var value = config.sequence;\n        if (value && !Array.isArray(value)) {\n          config.sequence = [value];\n        }\n\n        this.dirty = false;\n        this.config = config;\n        this._updateComponent();\n      }, () => {\n        alert('Only scripts inside scripts.yaml are editable.');\n        history.back();\n      });\n  }\n\n  creatingNewChanged(newVal) {\n    if (!newVal) {\n      return;\n    }\n    this.dirty = false;\n    this.config = {\n      alias: 'New Script',\n      sequence: [\n        { service: '', data: {} },\n      ],\n    };\n    this._updateComponent();\n  }\n\n  backTapped() {\n    if (this.dirty &&\n        // eslint-disable-next-line\n        !confirm('You have unsaved changes. Are you sure you want to leave?')) {\n      return;\n    }\n    history.back();\n  }\n\n  _updateComponent() {\n    if (this._renderScheduled || !this.hass || !this.config) return;\n    this._renderScheduled = true;\n    Promise.resolve().then(() => {\n      this._rendered = ScriptEditor(this.$.root, {\n        script: this.config,\n        onChange: this.configChanged,\n        isWide: this.isWide,\n        hass: this.hass,\n        localize: this.localize,\n      }, this._rendered);\n      this._renderScheduled = false;\n    });\n  }\n\n  saveScript() {\n    var id = this.creatingNew ?\n      '' + Date.now() : computeObjectId(this.script.entity_id);\n    this.hass.callApi('post', 'config/script/config/' + id, this.config).then(() => {\n      this.dirty = false;\n\n      if (this.creatingNew) {\n        this.navigate(`/config/script/edit/${id}`, true);\n      }\n    }, (errors) => {\n      this.errors = errors.body.message;\n      throw errors;\n    });\n  }\n\n  computeName(script) {\n    return script && computeStateName(script);\n  }\n}\n\ncustomElements.define('ha-script-editor', HaScriptEditor);\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-fab/paper-fab.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../layouts/ha-app-layout.js';\n\nimport '../ha-config-section.js';\n\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaScriptPicker extends LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        display: block;\n      }\n\n      paper-item {\n        cursor: pointer;\n      }\n\n      paper-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      paper-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n\n      a {\n        color: var(--primary-color);\n      }\n    </style>\n\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[localize('ui.panel.config.script.caption')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <ha-config-section is-wide=\"[[isWide]]\">\n        <div slot=\"header\">Script Editor</div>\n        <div slot=\"introduction\">\n          The script editor allows you to create and edit scripts.\n          Please read <a href=\"https://home-assistant.io/docs/scripts/editor/\" target=\"_blank\">the instructions</a> to make sure that you have configured Home Assistant correctly.\n        </div>\n\n        <paper-card heading=\"Pick script to edit\">\n          <template is=\"dom-if\" if=\"[[!scripts.length]]\">\n            <div class=\"card-content\">\n              <p>We couldn't find any editable scripts.</p>\n            </div>\n          </template>\n          <template is=\"dom-repeat\" items=\"[[scripts]]\" as=\"script\">\n            <paper-item>\n              <paper-item-body two-line=\"\" on-click=\"scriptTapped\">\n                <div>[[computeName(script)]]</div>\n                <div secondary=\"\">[[computeDescription(script)]]</div>\n              </paper-item-body>\n              <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n            </paper-item>\n          </template>\n        </paper-card>\n      </ha-config-section>\n\n      <paper-fab slot=\"fab\" is-wide$=\"[[isWide]]\" icon=\"hass:plus\" title=\"Add Script\" on-click=\"addScript\"></paper-fab>\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      scripts: {\n        type: Array,\n      },\n\n      isWide: {\n        type: Boolean,\n      },\n    };\n  }\n\n  scriptTapped(ev) {\n    this.navigate('/config/script/edit/' + this.scripts[ev.model.index].entity_id);\n  }\n\n  addScript() {\n    this.navigate('/config/script/new');\n  }\n\n  computeName(script) {\n    return computeStateName(script);\n  }\n\n  // Still thinking of something to add here.\n  // eslint-disable-next-line\n  computeDescription(script) {\n    return '';\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('ha-script-picker', HaScriptPicker);\n","import '@polymer/app-route/app-route.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-script-editor.js';\nimport './ha-script-picker.js';\n\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport computeStateDomain from '../../../common/entity/compute_state_domain.js';\n\nclass HaConfigScript extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      ha-script-picker,\n      ha-script-editor {\n        height: 100%;\n      }\n    </style>\n    <app-route route=\"[[route]]\" pattern=\"/script/edit/:script\" data=\"{{_routeData}}\" active=\"{{_edittingScript}}\"></app-route>\n    <app-route route=\"[[route]]\" pattern=\"/script/new\" active=\"{{_creatingNew}}\"></app-route>\n\n    <template is=\"dom-if\" if=\"[[!showEditor]]\">\n      <ha-script-picker hass=\"[[hass]]\" narrow=\"[[narrow]]\" show-menu=\"[[showMenu]]\" scripts=\"[[scripts]]\" is-wide=\"[[isWide]]\"></ha-script-picker>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[showEditor]]\" restamp=\"\">\n      <ha-script-editor hass=\"[[hass]]\" script=\"[[script]]\" is-wide=\"[[isWide]]\" creating-new=\"[[_creatingNew]]\"></ha-script-editor>\n    </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      route: Object,\n      isWide: Boolean,\n      _routeData: Object,\n      _routeMatches: Boolean,\n      _creatingNew: Boolean,\n      _edittingScript: Boolean,\n\n      scripts: {\n        type: Array,\n        computed: 'computeScripts(hass)',\n      },\n\n      script: {\n        type: Object,\n        computed: 'computeScript(scripts, _edittingScript, _routeData)',\n      },\n\n      showEditor: {\n        type: Boolean,\n        computed: 'computeShowEditor(_edittingScript, _creatingNew)',\n      }\n    };\n  }\n\n  computeScript(scripts, edittingAddon, routeData) {\n    if (!scripts || !edittingAddon) {\n      return null;\n    }\n    for (var i = 0; i < scripts.length; i++) {\n      if (scripts[i].entity_id === routeData.script) {\n        return scripts[i];\n      }\n    }\n    return null;\n  }\n\n  computeScripts(hass) {\n    var scripts = [];\n\n    Object.keys(hass.states).forEach(function (key) {\n      var entity = hass.states[key];\n\n      if (computeStateDomain(entity) === 'script') {\n        scripts.push(entity);\n      }\n    });\n\n    return scripts.sort(function entitySortBy(entityA, entityB) {\n      var nameA = computeStateName(entityA);\n      var nameB = computeStateName(entityB);\n\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  computeShowEditor(_edittingScript, _creatingNew) {\n    return _creatingNew || _edittingScript;\n  }\n}\n\ncustomElements.define('ha-config-script', HaConfigScript);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaServiceDescription extends PolymerElement {\n  static get template() {\n    return html`\n    [[_getDescription(hass, domain, service)]]\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      domain: String,\n      service: String,\n    };\n  }\n\n  _getDescription(hass, domain, service) {\n    var domainServices = hass.config.services[domain];\n    if (!domainServices) return '';\n    var serviceObject = domainServices[service];\n    if (!serviceObject) return '';\n    return serviceObject.description;\n  }\n}\n\ncustomElements.define('ha-service-description', HaServiceDescription);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\n\nimport computeStateName from '../../../common/entity/compute_state_name.js';\n\nclass ZwaveGroups extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n        }\n\n      .help-text {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 12px;\n      }\n    </style>\n    <paper-card class=\"content\" heading=\"Node group associations\">\n      <!--TODO make api for getting groups and members-->\n      <div class=\"device-picker\">\n        <paper-dropdown-menu label=\"Group\" dynamic-align=\"\" class=\"flex\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedGroup}}\">\n            <template is=\"dom-repeat\" items=\"[[groups]]\" as=\"state\">\n              <paper-item>[[computeSelectCaptionGroup(state)]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </div>\n      <template is=\"dom-if\" if=\"[[computeIsGroupSelected(selectedGroup)]]\">\n        <div class=\"device-picker\">\n          <paper-dropdown-menu label=\"Node to control\" dynamic-align=\"\" class=\"flex\">\n            <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedTargetNode}}\">\n              <template is=\"dom-repeat\" items=\"[[nodes]]\" as=\"state\">\n                <paper-item>[[computeSelectCaption(state)]]</paper-item>\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n\n        <div class=\"help-text\">\n          <span>Other Nodes in this group:</span>\n          <template is=\"dom-repeat\" items=\"[[otherGroupNodes]]\" as=\"state\">\n            <div>[[state]]</div>\n          </template>\n        </div>\n        <div class=\"help-text\">\n          <span>Max Associations:</span>\n          <span>[[maxAssociations]]</span>\n        </div>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[computeIsTargetNodeSelected(selectedTargetNode)]]\">\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[!noAssociationsLeft]]\">\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"change_association\" service-data=\"[[computeAssocServiceData(selectedGroup, &quot;add&quot;)]]\">Add To Group</ha-call-service-button>\n          </template>\n          <template is=\"dom-if\" if=\"[[computeTargetInGroup(selectedGroup, selectedTargetNode)]]\">\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"change_association\" service-data=\"[[computeAssocServiceData(selectedGroup, &quot;remove&quot;)]]\">Remove From Group</ha-call-service-button>\n          </template>\n        </div>\n      </template>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      nodes: {\n        type: Array,\n      },\n\n      groups: {\n        type: Array,\n      },\n\n      selectedNode: {\n        type: Number,\n      },\n\n      selectedTargetNode: {\n        type: Number,\n        value: -1\n      },\n\n      selectedGroup: {\n        type: Number,\n        value: -1,\n        observer: 'selectedGroupChanged'\n      },\n\n      otherGroupNodes: {\n        type: Array,\n        value: -1,\n        computed: 'computeOtherGroupNodes(selectedGroup)'\n      },\n\n      maxAssociations: {\n        type: String,\n        value: '',\n        computed: 'computeMaxAssociations(selectedGroup)'\n      },\n\n      noAssociationsLeft: {\n        type: Boolean,\n        value: true,\n        computed: 'computeAssociationsLeft(selectedGroup)'\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('hass-service-called', ev => this.serviceCalled(ev));\n  }\n\n  serviceCalled(ev) {\n    if (ev.detail.success) {\n      var foo = this;\n      setTimeout(function () {\n        foo.refreshGroups(foo.selectedNode);\n      }, 5000);\n    }\n  }\n\n  computeAssociationsLeft(selectedGroup) {\n    if (selectedGroup === -1) return true;\n    return (this.maxAssociations === this.otherGroupNodes.length);\n  }\n\n  computeMaxAssociations(selectedGroup) {\n    if (selectedGroup === -1) return -1;\n    var maxAssociations = this.groups[selectedGroup].value.max_associations;\n    if (!maxAssociations) return 'None';\n    return maxAssociations;\n  }\n\n  computeOtherGroupNodes(selectedGroup) {\n    if (selectedGroup === -1) return -1;\n    var associations = Object.values(this.groups[selectedGroup].value.association_instances);\n    if (!associations.length) return ['None'];\n    return associations.map((assoc) => {\n      if (!assoc.length || assoc.length !== 2) {\n        return 'Unknown Node: ' + assoc;\n      }\n      const id = assoc[0];\n      const instance = assoc[1];\n      const node = this.nodes.find(n => n.attributes.node_id === id);\n      if (!node) {\n        return 'Unknown Node (id: ' + (instance ? id + '.' + instance : id) + ')';\n      }\n      let caption = this.computeSelectCaption(node);\n      if (instance) {\n        caption += '/ Instance: ' + instance;\n      }\n      return caption;\n    });\n  }\n\n  computeTargetInGroup(selectedGroup, selectedTargetNode) {\n    if (selectedGroup === -1 || selectedTargetNode === -1) return false;\n    const associations = Object.values(this.groups[selectedGroup].value.associations);\n    if (!associations.length) return false;\n    return associations.indexOf(this.nodes[selectedTargetNode].attributes.node_id) !== -1;\n  }\n\n  computeSelectCaption(stateObj) {\n    return computeStateName(stateObj) + ' (Node:' +\n      stateObj.attributes.node_id + ' ' +\n      stateObj.attributes.query_stage + ')';\n  }\n\n  computeSelectCaptionGroup(stateObj) {\n    return (stateObj.key + ': ' + stateObj.value.label);\n  }\n\n  computeIsTargetNodeSelected(selectedTargetNode) {\n    return this.nodes && selectedTargetNode !== -1;\n  }\n\n  computeIsGroupSelected(selectedGroup) {\n    return this.nodes && this.selectedNode !== -1 && selectedGroup !== -1;\n  }\n\n  computeAssocServiceData(selectedGroup, type) {\n    if (!this.groups === -1 || selectedGroup === -1 || this.selectedNode === -1) return -1;\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      association: type,\n      target_node_id: this.nodes[this.selectedTargetNode].attributes.node_id,\n      group: this.groups[selectedGroup].key\n    };\n  }\n\n  refreshGroups(selectedNode) {\n    var groupData = [];\n    this.hass.callApi('GET', 'zwave/groups/' + this.nodes[selectedNode].attributes.node_id).then(function (groups) {\n      Object.keys(groups).forEach(function (key) {\n        groupData.push({\n          key: key,\n          value: groups[key],\n        });\n      });\n      this.groups = groupData;\n      this.selectedGroupChanged(this.selectedGroup);\n    }.bind(this));\n  }\n\n  selectedGroupChanged(selectedGroup) {\n    if (this.selectedGroup === -1 || selectedGroup === -1) return;\n    this.maxAssociations = this.groups[selectedGroup].value.max_associations;\n    this.otherGroupNodes = Object.values(this.groups[selectedGroup].value.associations);\n  }\n}\n\ncustomElements.define('zwave-groups', ZwaveGroups);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../ha-config-section.js';\n\nclass OzwLog extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n      }\n    </style>\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <span slot=\"header\">OZW Log</span>\n      <paper-card>\n      <div class=\"device-picker\">\n        <paper-input label=\"Number of last log lines.\" type=\"number\" min=\"0\" max=\"1000\" step=\"10\" value=\"{{numLogLines}}\">\n        </paper-input>\n      </div>\n      <div class=\"card-actions\">\n        <paper-button raised=\"\" on-click=\"refreshLog\">Refresh</paper-button>\n      </div>\n      <div class=\"help-text\">\n             <pre>[[ozwLogs]]</pre>\n      </div>\n      </paper-card>\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n\n      ozwLogs: {\n        type: String,\n        value: 'Refresh to pull log'\n      },\n\n      numLogLines: {\n        type: Number,\n        value: 0\n      },\n    };\n  }\n\n  refreshLog() {\n    this.ozwLogs = 'Loading ozw log...';\n    this.hass.callApi('GET', 'zwave/ozwlog?lines=' + this.numLogLines)\n      .then((info) => {\n        this.ozwLogs = info;\n      });\n  }\n}\n\ncustomElements.define('ozw-log', OzwLog);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-api-button.js';\nimport '../../../components/buttons/ha-call-service-button.js';\nimport '../../../components/ha-service-description.js';\nimport '../ha-config-section.js';\n\nclass ZwaveNetwork extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .card-actions.warning ha-call-service-button {\n        color: var(--google-red-500);\n      }\n\n      .toggle-help-icon {\n        position: absolute;\n        top: -6px;\n        right: 0;\n        color: var(--primary-color);\n      }\n\n      ha-service-description {\n        display: block;\n        color: grey;\n      }\n\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <ha-config-section is-wide=\"[[isWide]]\">\n      <div style=\"position: relative\" slot=\"header\">\n        <span>Z-Wave Network Management</span>\n        <paper-icon-button class=\"toggle-help-icon\" on-click=\"helpTap\" icon=\"hass:help-circle\"></paper-icon-button>\n\n      </div>\n      <span slot=\"introduction\">\n        Run commands that affect the Z-Wave network. You won't get feedback on whether the command succeeded, but you can look in the OZW Log to try to figure out.\n      </span>\n\n\n      <paper-card class=\"content\">\n        <div class=\"card-actions\">\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"add_node_secure\">Add Node Secure</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"add_node_secure\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"add_node\">Add Node</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"add_node\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"remove_node\">Remove Node</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"remove_node\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n        </div>\n        <div class=\"card-actions warning\">\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"cancel_command\">Cancel Command</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"cancel_command\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"heal_network\">Heal Network</ha-call-service-button>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"start_network\">Start Network</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"start_network\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"stop_network\">Stop Network</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"stop_network\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"soft_reset\">Soft Reset</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"soft_reset\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n\n          <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"test_network\">Test Network</ha-call-service-button>\n          <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"test_network\" hidden$=\"[[!showDescription]]\"></ha-service-description>\n          <ha-call-api-button hass=\"[[hass]]\" path=\"zwave/saveconfig\">Save Config</ha-call-api-button>\n\n        </div>\n      </paper-card>\n    </ha-config-section>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n\n      showDescription: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  helpTap() {\n    this.showDescription = !this.showDescription;\n  }\n}\n\ncustomElements.define('zwave-network', ZwaveNetwork);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\n\nclass ZwaveNodeConfig extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n        }\n\n      .help-text {\n        padding-left: 24px;\n        padding-right: 24px;\n      }\n    </style>\n    <div class=\"content\">\n      <paper-card heading=\"Node config options\">\n        <template is=\"dom-if\" if=\"[[wakeupNode]]\">\n          <div class=\"card-actions\">\n            <paper-input float-label=\"Wakeup Interval\" type=\"number\" value=\"{{wakeupInput}}\" placeholder=\"[[computeGetWakeupValue(selectedNode)]]\">\n               <div suffix=\"\">seconds</div>\n            </paper-input>\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"set_wakeup\" service-data=\"[[computeWakeupServiceData(wakeupInput)]]\">Set Wakeup</ha-call-service-button>\n          </div>\n        </template>\n        <div class=\"device-picker\">\n        <paper-dropdown-menu label=\"Config parameter\" dynamic-align=\"\" class=\"flex\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedConfigParameter}}\">\n            <template is=\"dom-repeat\" items=\"[[config]]\" as=\"state\">\n              <paper-item>[[computeSelectCaptionConfigParameter(state)]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n        </div>\n        <template is=\"dom-if\" if=\"[[isConfigParameterSelected(selectedConfigParameter, 'List')]]\">\n          <div class=\"device-picker\">\n            <paper-dropdown-menu label=\"Config value\" dynamic-align=\"\" class=\"flex\" placeholder=\"{{loadedConfigValue}}\">\n              <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedConfigValue}}\">\n                <template is=\"dom-repeat\" items=\"[[selectedConfigParameterValues]]\" as=\"state\">\n                  <paper-item>[[state]]</paper-item>\n                </template>\n              </paper-listbox>\n            </paper-dropdown-menu>\n          </div>\n        </template>\n\n        <template is=\"dom-if\" if=\"[[isConfigParameterSelected(selectedConfigParameter, 'Byte Short Int')]]\">\n          <div class=\"card-actions\">\n            <paper-input label=\"{{selectedConfigParameterNumValues}}\" type=\"number\" value=\"{{selectedConfigValue}}\" max=\"{{configParameterMax}}\" min=\"{{configParameterMin}}\">\n            </paper-input>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[isConfigParameterSelected(selectedConfigParameter, 'Bool Button')]]\">\n          <div class=\"device-picker\">\n            <paper-dropdown-menu label=\"Config value\" class=\"flex\" dynamic-align=\"\" placeholder=\"{{loadedConfigValue}}\">\n              <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedConfigValue}}\">\n                <template is=\"dom-repeat\" items=\"[[selectedConfigParameterValues]]\" as=\"state\">\n                  <paper-item>[[state]]</paper-item>\n                </template>\n              </paper-listbox>\n            </paper-dropdown-menu>\n          </div>\n        </template>\n        <div class=\"help-text\">\n          <span>[[configValueHelpText]]</span>\n        </div>\n        <template is=\"dom-if\" if=\"[[isConfigParameterSelected(selectedConfigParameter, 'Bool Button Byte Short Int List')]]\">\n          <div class=\"card-actions\">\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"set_config_parameter\" service-data=\"[[computeSetConfigParameterServiceData(selectedConfigValue)]]\">Set Config Parameter</ha-call-service-button>\n          </div>\n        </template>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      nodes: {\n        type: Array,\n        observer: 'nodesChanged'\n      },\n\n      selectedNode: {\n        type: Number,\n        value: -1,\n        observer: 'nodesChanged'\n      },\n\n      config: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n\n      selectedConfigParameter: {\n        type: Number,\n        value: -1,\n        observer: 'selectedConfigParameterChanged'\n      },\n\n      configParameterMax: {\n        type: Number,\n        value: -1\n      },\n\n      configParameterMin: {\n        type: Number,\n        value: -1\n      },\n\n      configValueHelpText: {\n        type: String,\n        value: '',\n        computed: 'computeConfigValueHelp(selectedConfigParameter)'\n      },\n\n      selectedConfigParameterType: {\n        type: String,\n        value: ''\n      },\n\n      selectedConfigValue: {\n        type: Number,\n        value: -1,\n        observer: 'computeSetConfigParameterServiceData'\n      },\n\n      selectedConfigParameterValues: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n\n      selectedConfigParameterNumValues: {\n        type: String,\n        value: ''\n      },\n\n      loadedConfigValue: {\n        type: Number,\n        value: -1\n      },\n\n      wakeupInput: {\n        type: Number,\n      },\n\n      wakeupNode: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('hass-service-called', ev => this.serviceCalled(ev));\n  }\n\n  serviceCalled(ev) {\n    if (ev.detail.success) {\n      var foo = this;\n      setTimeout(function () {\n        foo.refreshConfig(foo.selectedNode);\n      }, 5000);\n    }\n  }\n\n  nodesChanged() {\n    if (!this.nodes) return;\n    this.wakeupNode = (this.nodes[this.selectedNode].attributes.wake_up_interval === 0 ||\n      this.nodes[this.selectedNode].attributes.wake_up_interval);\n    if (this.wakeupNode) {\n      if (this.nodes[this.selectedNode].attributes.wake_up_interval === 0) this.wakeupInput = '';\n      else this.wakeupInput = this.nodes[this.selectedNode].attributes.wake_up_interval;\n    }\n  }\n\n  computeGetWakeupValue(selectedNode) {\n    if (this.selectedNode === -1 ||\n      !this.nodes[selectedNode].attributes.wake_up_interval) return 'unknown';\n    return (this.nodes[selectedNode].attributes.wake_up_interval);\n  }\n\n  computeWakeupServiceData(wakeupInput) {\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      value: wakeupInput\n    };\n  }\n\n  computeConfigValueHelp(selectedConfigParameter) {\n    if (selectedConfigParameter === -1) return '';\n    var helpText = this.config[selectedConfigParameter].value.help;\n    if (!helpText) return ['No helptext available'];\n    return helpText;\n  }\n\n  computeSetConfigParameterServiceData(selectedConfigValue) {\n    if (this.selectedNode === -1 || this.selectedConfigParameter === -1) return -1;\n    var valueData = null;\n    if (('Short Byte Int').includes(this.selectedConfigParameterType)) {\n      valueData = parseInt(selectedConfigValue, 10);\n    } if (('Bool Button').includes(this.selectedConfigParameterType)) {\n      valueData = this.selectedConfigParameterValues[selectedConfigValue];\n    } if (this.selectedConfigParameterType === 'List') {\n      valueData = this.selectedConfigParameterValues[selectedConfigValue];\n    }\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      parameter: this.config[this.selectedConfigParameter].key,\n      value: valueData\n    };\n  }\n\n  selectedConfigParameterChanged(selectedConfigParameter) {\n    if (selectedConfigParameter === -1) return;\n    this.selectedConfigValue = -1;\n    this.loadedConfigValue = -1;\n    this.selectedConfigParameterValues = [];\n    this.selectedConfigParameterType = this.config[selectedConfigParameter].value.type;\n    this.configParameterMax = this.config[selectedConfigParameter].value.max;\n    this.configParameterMin = this.config[selectedConfigParameter].value.min;\n    this.loadedConfigValue = this.config[selectedConfigParameter].value.data;\n    this.configValueHelpText = this.config[selectedConfigParameter].value.help;\n    if (('Short Byte Int').includes(this.selectedConfigParameterType)) {\n      this.selectedConfigParameterNumValues = this.config[selectedConfigParameter].value.data_items;\n      this.selectedConfigValue = this.loadedConfigValue;\n    }\n    if (('Bool Button').includes(this.selectedConfigParameterType)) {\n      this.selectedConfigParameterValues = ['True', 'False'];\n      if (this.config[selectedConfigParameter].value.data) {\n        this.loadedConfigValue = 'True';\n      } else this.loadedConfigValue = 'False';\n    }\n    if (('List').includes(this.selectedConfigParameterType)) {\n      this.selectedConfigParameterValues = this.config[selectedConfigParameter].value.data_items;\n    }\n  }\n\n  isConfigParameterSelected(selectedConfigParameter, type) {\n    if (selectedConfigParameter === -1) return false;\n    if (this.config[selectedConfigParameter].value.type === type) return true;\n    if (type.includes(this.config[selectedConfigParameter].value.type)) return true;\n    return false;\n  }\n\n  computeSelectCaptionConfigParameter(stateObj) {\n    return (stateObj.key + ': ' + stateObj.value.label);\n  }\n\n  refreshConfig(selectedNode) {\n    var configData = [];\n    this.hass.callApi('GET', 'zwave/config/' + this.nodes[selectedNode].attributes.node_id).then(function (config) {\n      Object.keys(config).forEach(function (key) {\n        configData.push({\n          key: key,\n          value: config[key],\n        });\n      });\n      this.config = configData;\n      this.selectedConfigParameterChanged(this.selectedConfigParameter);\n    }.bind(this));\n  }\n}\n\ncustomElements.define('zwave-node-config', ZwaveNodeConfig);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass ZwaveNodeInformation extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      .node-info {\n        margin-left: 16px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      paper-button[toggles][active] {\n        background: lightgray;\n      }\n\n    </style>\n\n    <div class=\"content\">\n      <paper-card heading=\"Node Information\">\n      <div class=\"card-actions\">\n        <paper-button toggles=\"\" raised=\"\" noink=\"\" active=\"{{nodeInfoActive}}\">Show</paper-button>\n      </div>\n      <template is=\"dom-if\" if=\"{{nodeInfoActive}}\">\n        <template is=\"dom-repeat\" items=\"[[selectedNodeAttrs]]\" as=\"state\">\n          <div class=\"node-info\">\n            <span>[[state]]</span>\n          </div>\n        </template>\n      </template>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      nodes: {\n        type: Array,\n        observer: 'nodeChanged'\n      },\n\n      selectedNode: {\n        type: Number,\n        value: -1,\n        observer: 'nodeChanged'\n      },\n\n      selectedNodeAttrs: {\n        type: Array,\n      },\n\n      nodeInfoActive: {\n        type: Boolean,\n      },\n    };\n  }\n\n  nodeChanged(selectedNode) {\n    if (!this.nodes || selectedNode === -1) return;\n    var nodeAttrs = this.nodes[this.selectedNode].attributes;\n    var att = [];\n    Object.keys(nodeAttrs).forEach(function (key) {\n      att.push(key + ': ' + nodeAttrs[key]);\n    });\n    this.selectedNodeAttrs = att.sort();\n  }\n}\n\ncustomElements.define('zwave-node-information', ZwaveNodeInformation);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\n\nclass ZwaveUsercodes extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n        }\n    </style>\n      <div class=\"content\">\n        <paper-card heading=\"Node user codes\">\n          <div class=\"device-picker\">\n          <paper-dropdown-menu label=\"Code slot\" dynamic-align=\"\" class=\"flex\">\n            <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedUserCode}}\">\n              <template is=\"dom-repeat\" items=\"[[userCodes]]\" as=\"state\">\n                <paper-item>[[computeSelectCaptionUserCodes(state)]]</paper-item>\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n          </div>\n\n          <template is=\"dom-if\" if=\"[[isUserCodeSelected(selectedUserCode)]]\">\n            <div class=\"card-actions\">\n              <paper-input label=\"User code\" type=\"text\" allowed-pattern=\"[0-9,a-f,x,\\\\\\\\]\" maxlength=\"{{userCodeMaxLen}}\" minlength=\"16\" value=\"{{selectedUserCodeValue}}\">\n              </paper-input>\n              <pre>Ascii: [[computedCodeOutput]]</pre>\n            </div>\n            <div class=\"card-actions\">\n              <ha-call-service-button hass=\"[[hass]]\" domain=\"lock\" service=\"set_usercode\" service-data=\"[[computeUserCodeServiceData(selectedUserCodeValue, &quot;Add&quot;)]]\">Set Usercode</ha-call-service-button>\n              <ha-call-service-button hass=\"[[hass]]\" domain=\"lock\" service=\"clear_usercode\" service-data=\"[[computeUserCodeServiceData(selectedUserCode, &quot;Delete&quot;)]]\">Delete Usercode</ha-call-service-button>\n            </div>\n          </template>\n        </paper-card>\n      </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      nodes: {\n        type: Array,\n      },\n\n      selectedNode: {\n        type: Number,\n      },\n\n      userCodes: {\n        type: Object,\n      },\n\n      userCodeMaxLen: {\n        type: Number,\n        value: 4\n      },\n\n      selectedUserCode: {\n        type: Number,\n        value: -1,\n        observer: 'selectedUserCodeChanged'\n      },\n\n      selectedUserCodeValue: {\n        type: String,\n      },\n\n      computedCodeOutput: {\n        type: String,\n        value: ''\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('hass-service-called', ev => this.serviceCalled(ev));\n  }\n\n  serviceCalled(ev) {\n    if (ev.detail.success) {\n      var foo = this;\n      setTimeout(function () {\n        foo.refreshUserCodes(foo.selectedNode);\n      }, 5000);\n    }\n  }\n\n  isUserCodeSelected(selectedUserCode) {\n    if (selectedUserCode === -1) return false;\n    return true;\n  }\n\n  computeSelectCaptionUserCodes(stateObj) {\n    return (stateObj.key + ': ' + stateObj.value.label);\n  }\n\n  selectedUserCodeChanged(selectedUserCode) {\n    if (this.selectedUserCode === -1 || selectedUserCode === -1) return;\n    var value = this.userCodes[selectedUserCode].value.code;\n    this.userCodeMaxLen = (this.userCodes[selectedUserCode].value.length * 4);\n    this.selectedUserCodeValue = this.a2hex(value);\n    this.computedCodeOutput = '[' + this.hex2a(this.selectedUserCodeValue) + ']';\n  }\n\n  computeUserCodeServiceData(selectedUserCodeValue, type) {\n    if (this.selectedNode === -1 || !selectedUserCodeValue) return -1;\n    var serviceData = null;\n    var valueData = null;\n    if (type === 'Add') {\n      valueData = this.hex2a(selectedUserCodeValue);\n      this.computedCodeOutput = '[' + valueData + ']';\n      serviceData = {\n        node_id: this.nodes[this.selectedNode].attributes.node_id,\n        code_slot: this.selectedUserCode,\n        usercode: valueData\n      };\n    }\n    if (type === 'Delete') {\n      serviceData = {\n        node_id: this.nodes[this.selectedNode].attributes.node_id,\n        code_slot: this.selectedUserCode\n      };\n    }\n    return serviceData;\n  }\n\n  refreshUserCodes(selectedNode) {\n    this.selectedUserCodeValue = '';\n    var userCodes = [];\n    this.hass.callApi('GET', 'zwave/usercodes/' + this.nodes[selectedNode].attributes.node_id).then(function (usercodes) {\n      Object.keys(usercodes).forEach(function (key) {\n        userCodes.push({\n          key: key,\n          value: usercodes[key],\n        });\n      });\n      this.userCodes = userCodes;\n      this.selectedUserCodeChanged(this.selectedUserCode);\n    }.bind(this));\n  }\n\n  a2hex(str) {\n    var arr = [];\n    var output = '';\n    for (var i = 0, l = str.length; i < l; i++) {\n      var hex = Number(str.charCodeAt(i)).toString(16);\n      if (hex === '0') {\n        output = '00';\n      } else {\n        output = hex;\n      }\n      arr.push('\\\\x' + output);\n    }\n    return arr.join('');\n  }\n\n  hex2a(hexx) {\n    var hex = hexx.toString();\n    var hexMod = hex.replace(/\\\\x/g, '');\n    var str = '';\n    for (var i = 0; i < hexMod.length; i += 2) {\n      str += String.fromCharCode(parseInt(hexMod.substr(i, 2), 16));\n    }\n    return str;\n  }\n}\n\ncustomElements.define('zwave-usercodes', ZwaveUsercodes);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\n\nclass ZwaveValues extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n        }\n\n      .help-text {\n        padding-left: 24px;\n        padding-right: 24px;\n      }\n    </style>\n    <div class=\"content\">\n      <paper-card heading=\"Node Values\">\n        <div class=\"device-picker\">\n        <paper-dropdown-menu label=\"Value\" dynamic-align=\"\" class=\"flex\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedValue}}\">\n             <template is=\"dom-repeat\" items=\"[[values]]\" as=\"item\">\n              <paper-item>[[computeSelectCaption(item)]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n        </div>\n        <template is=\"dom-if\" if=\"[[!computeIsValueSelected(selectedValue)]]\">\n          <div class=\"card-actions\">\n            <paper-input float-label=\"Value Name\" type=\"text\" value=\"{{newValueNameInput}}\" placeholder=\"[[computeGetValueName(selectedValue)]]\">\n            </paper-input>\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"rename_value\" service-data=\"[[computeValueNameServiceData(newValueNameInput)]]\">Rename Value</ha-call-service-button>\n\n          </div>\n        </template>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      nodes: {\n        type: Array,\n      },\n\n      values: {\n        type: Array,\n      },\n\n      selectedNode: {\n        type: Number,\n      },\n\n      selectedValue: {\n        type: Number,\n        value: -1,\n        observer: 'selectedValueChanged'\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('hass-service-called', ev => this.serviceCalled(ev));\n  }\n\n  serviceCalled(ev) {\n    var foo = this;\n    if (ev.detail.success) {\n      setTimeout(function () {\n        foo.refreshValues(foo.selectedNode);\n      }, 5000);\n    }\n  }\n\n  computeSelectCaption(item) {\n    return item.value.label + ' (Instance: ' + item.value.instance + ', Index: ' + item.value.index + ')';\n  }\n\n  computeGetValueName(selectedValue) {\n    return this.values[selectedValue].value.label;\n  }\n\n  computeIsValueSelected(selectedValue) {\n    return (!this.nodes || this.selectedNode === -1 || selectedValue === -1);\n  }\n\n  refreshValues(selectedNode) {\n    var valueData = [];\n    this.hass.callApi('GET', 'zwave/values/' + this.nodes[selectedNode].attributes.node_id).then(function (values) {\n      Object.keys(values).forEach(function (key) {\n        valueData.push({\n          key: key,\n          value: values[key],\n        });\n      });\n      this.values = valueData;\n      this.selectedValueChanged(this.selectedValue);\n    }.bind(this));\n  }\n\n  computeValueNameServiceData(newValueNameInput) {\n    if (!this.selectedNode === -1 || this.selectedValue === -1) return -1;\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      value_id: this.values[this.selectedValue].key,\n      name: newValueNameInput,\n    };\n  }\n\n  selectedValueChanged(selectedValue) {\n    if (!this.selectedNode === -1 || this.selectedValue === -1) return;\n    var el = this;\n    this.hass.callApi('GET', 'config/zwave/device_config/' + this.values[selectedValue].value.entity_id)\n      .then(function (data) {\n        el.entityIgnored = data.ignored || false;\n        el.entityPollingIntensity = el.values[selectedValue].value.poll_intensity;\n      });\n  }\n}\n\ncustomElements.define('zwave-values', ZwaveValues);\n","import '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-service-button.js';\nimport '../../../components/ha-menu-button.js';\nimport '../../../components/ha-service-description.js';\nimport '../../../layouts/ha-app-layout.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\nimport '../ha-form-style.js';\nimport './zwave-groups.js';\nimport './zwave-log.js';\nimport './zwave-network.js';\nimport './zwave-node-config.js';\nimport './zwave-node-information.js';\nimport './zwave-usercodes.js';\nimport './zwave-values.js';\n\nimport sortByName from '../../../common/entity/states_sort_by_name.js';\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport computeStateDomain from '../../../common/entity/compute_state_domain.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigZwave extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style ha-form-style\">\n      .content {\n        margin-top: 24px;\n      }\n\n      .node-info {\n        margin-left: 16px;\n      }\n\n      .help-text {\n        padding-left: 24px;\n        padding-right: 24px;\n      }\n\n      paper-card {\n        display: block;\n        margin: 0 auto;\n        max-width: 600px;\n      }\n\n      .device-picker {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-bottom: 24px;\n      }\n\n      ha-service-description {\n        display: block;\n        color: grey;\n      }\n\n      [hidden] {\n        display: none;\n      }\n\n      .toggle-help-icon {\n        position: absolute;\n        top: 6px;\n        right: 0;\n        color: var(--primary-color);\n      }\n    </style>\n    <ha-app-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[localize('ui.panel.config.zwave.caption')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <zwave-network id=\"zwave-network\" is-wide=\"[[isWide]]\" hass=\"[[hass]]\"></zwave-network>\n\n      <!--Node card-->\n      <ha-config-section is-wide=\"[[isWide]]\">\n        <div style=\"position: relative\" slot=\"header\">\n          <span>Z-Wave Node Management</span>\n          <paper-icon-button class=\"toggle-help-icon\" on-click=\"toggleHelp\" icon=\"hass:help-circle\"></paper-icon-button>\n\n        </div>\n        <span slot=\"introduction\">\n          Run Z-Wave commands that affect a single node. Pick a node to see a list of available commands.\n        </span>\n\n        <paper-card class=\"content\">\n          <div class=\"device-picker\">\n            <paper-dropdown-menu dynamic-align=\"\" label=\"Nodes\" class=\"flex\">\n              <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedNode}}\">\n                <template is=\"dom-repeat\" items=\"[[nodes]]\" as=\"state\">\n                  <paper-item>[[computeSelectCaption(state)]]</paper-item>\n                </template>\n              </paper-listbox>\n            </paper-dropdown-menu>\n          </div>\n            <template is=\"dom-if\" if=\"[[!computeIsNodeSelected(selectedNode)]]\">\n              <template is=\"dom-if\" if=\"[[showHelp]]\">\n                <div style=\"color: grey; padding: 12px\">Select node to view per-node options</div>\n              </template>\n            </template>\n\n          <template is=\"dom-if\" if=\"[[computeIsNodeSelected(selectedNode)]]\">\n          <div class=\"card-actions\">\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"refresh_node\" service-data=\"[[computeNodeServiceData(selectedNode)]]\">Refresh Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"refresh_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"remove_failed_node\" service-data=\"[[computeNodeServiceData(selectedNode)]]\">Remove Failed Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"remove_failed_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"replace_failed_node\" service-data=\"[[computeNodeServiceData(selectedNode)]]\">Replace Failed Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"replace_failed_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"print_node\" service-data=\"[[computeNodeServiceData(selectedNode)]]\">Print Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"print_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"heal_node\" service-data=\"[[computeHealNodeServiceData(selectedNode)]]\">Heal Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"heal_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"test_node\" service-data=\"[[computeNodeServiceData(selectedNode)]]\">Test Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"test_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n          </div>\n          <div class=\"card-actions\">\n            <paper-input float-label=\"New node name\" type=\"text\" value=\"{{newNodeNameInput}}\" placeholder=\"[[computeGetNodeName(selectedNode)]]\">\n            </paper-input>\n            <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"rename_node\" service-data=\"[[computeNodeNameServiceData(newNodeNameInput)]]\">Rename Node</ha-call-service-button>\n            <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"rename_node\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n           </div>\n\n           <div class=\"device-picker\">\n            <paper-dropdown-menu label=\"Entities of this node\" dynamic-align=\"\" class=\"flex\">\n              <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedEntity}}\">\n                <template is=\"dom-repeat\" items=\"[[entities]]\" as=\"state\">\n                  <paper-item>[[computeSelectCaptionEnt(state)]]</paper-item>\n                </template>\n              </paper-listbox>\n            </paper-dropdown-menu>\n           </div>\n           <template is=\"dom-if\" if=\"[[!computeIsEntitySelected(selectedEntity)]]\">\n           <div class=\"card-actions\">\n             <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"refresh_entity\" service-data=\"[[computeRefreshEntityServiceData(selectedEntity)]]\">Refresh Entity</ha-call-service-button>\n             <ha-service-description hass=\"[[hass]]\" domain=\"zwave\" service=\"refresh_entity\" hidden$=\"[[!showHelp]]\"></ha-service-description>\n           </div>\n           <div class=\"form-group\">\n             <paper-checkbox checked=\"{{entityIgnored}}\" class=\"form-control\">\n             Exclude this entity from Home Assistant\n             </paper-checkbox>\n             <paper-input disabled=\"{{entityIgnored}}\" label=\"Polling intensity\" type=\"number\" min=\"0\" value=\"{{entityPollingIntensity}}\">\n             </paper-input>\n           </div>\n           <div class=\"card-actions\">\n             <ha-call-service-button hass=\"[[hass]]\" domain=\"zwave\" service=\"set_poll_intensity\" service-data=\"[[computePollIntensityServiceData(entityPollingIntensity)]]\">Save</ha-call-service-button>\n           </div>\n           <div class=\"content\">\n             <div class=\"card-actions\">\n               <paper-button toggles=\"\" raised=\"\" noink=\"\" active=\"{{entityInfoActive}}\">Entity Attributes</paper-button>\n             </div>\n             <template is=\"dom-if\" if=\"{{entityInfoActive}}\">\n               <template is=\"dom-repeat\" items=\"[[selectedEntityAttrs]]\" as=\"state\">\n                 <div class=\"node-info\">\n                   <span>[[state]]</span>\n                 </div>\n               </template>\n             </template>\n           </div>\n\n           </template>\n          </template>\n        </paper-card>\n\n        <template is=\"dom-if\" if=\"[[computeIsNodeSelected(selectedNode)]]\">\n          <!--Node info card-->\n          <zwave-node-information id=\"zwave-node-information\" nodes=\"[[nodes]]\" selected-node=\"[[selectedNode]]\"></zwave-node-information>\n\n          <!--Value card-->\n          <zwave-values hass=\"[[hass]]\" nodes=\"[[nodes]]\" selected-node=\"[[selectedNode]]\" values=\"[[values]]\"></zwave-values>\n\n          <!--Group card-->\n          <zwave-groups hass=\"[[hass]]\" nodes=\"[[nodes]]\" selected-node=\"[[selectedNode]]\" groups=\"[[groups]]\"></zwave-groups>\n\n          <!--Config card-->\n          <zwave-node-config hass=\"[[hass]]\" nodes=\"[[nodes]]\" selected-node=\"[[selectedNode]]\" config=\"[[config]]\"></zwave-node-config>\n        </template>\n\n        <!--User Codes-->\n        <template is=\"dom-if\" if=\"{{hasNodeUserCodes}}\">\n          <zwave-usercodes id=\"zwave-usercodes\" hass=\"[[hass]]\" nodes=\"[[nodes]]\" user-codes=\"[[userCodes]]\" selected-node=\"[[selectedNode]]\"></zwave-usercodes>\n      </template>\n      </ha-config-section>\n\n\n\n      <!--Ozw log-->\n      <ozw-log is-wide=\"[[isWide]]\" hass=\"[[hass]]\"></ozw-log>\n\n    </ha-app-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n\n      nodes: {\n        type: Array,\n        computed: 'computeNodes(hass)'\n      },\n\n      selectedNode: {\n        type: Number,\n        value: -1,\n        observer: 'selectedNodeChanged'\n      },\n\n      config: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n\n      entities: {\n        type: Array,\n        computed: 'computeEntities(selectedNode)',\n      },\n\n      entityInfoActive: {\n        type: Boolean,\n      },\n\n      selectedEntity: {\n        type: Number,\n        value: -1,\n        observer: 'selectedEntityChanged',\n      },\n\n      selectedEntityAttrs: {\n        type: Array,\n        computed: 'computeSelectedEntityAttrs(selectedEntity)'\n      },\n\n      values: {\n        type: Array,\n      },\n\n      groups: {\n        type: Array,\n      },\n\n      newNodeNameInput: {\n        type: String,\n      },\n\n      userCodes: {\n        type: Array,\n        value: function () {\n          return [];\n        },\n      },\n\n      hasNodeUserCodes: {\n        type: Boolean,\n        value: false,\n      },\n\n      showHelp: {\n        type: Boolean,\n        value: false,\n      },\n\n      entityIgnored: {\n        type: Boolean,\n      },\n\n      entityPollingIntensity: {\n        type: Number,\n        value: 0,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('hass-service-called', ev => this.serviceCalled(ev));\n  }\n\n  serviceCalled(ev) {\n    var el = this;\n    if ((ev.detail.success) && (ev.detail.service === 'set_poll_intensity')) {\n      el.saveEntity();\n    }\n  }\n\n  computeNodes(hass) {\n    return Object.keys(hass.states)\n      .map(function (key) { return hass.states[key]; })\n      .filter(function (ent) {\n        return ((ent.entity_id).match('zwave[.]'));\n      })\n      .sort(sortByName);\n  }\n\n  computeEntities(selectedNode) {\n    if (!this.nodes || selectedNode === -1) return -1;\n    var hass = this.hass;\n    var nodeid = this.nodes[this.selectedNode].attributes.node_id;\n    return Object.keys(hass.states)\n      .map(function (key) { return hass.states[key]; })\n      .filter(function (ent) {\n        if (ent.attributes.node_id === undefined) {\n          return false;\n        }\n        return (!ent.attributes.hidden &&\n                'node_id' in ent.attributes &&\n                ent.attributes.node_id === nodeid &&\n                (!(ent.entity_id).match('zwave[.]')));\n      })\n      .sort(sortByName);\n  }\n\n  selectedNodeChanged(selectedNode) {\n    this.newNodeNameInput = '';\n\n    if (selectedNode === -1) return;\n    this.selectedConfigParameter = -1;\n    this.selectedConfigParameterValue = -1;\n    this.selectedGroup = -1;\n\n    this.hass.callApi('GET', 'zwave/config/' + this.nodes[selectedNode].attributes.node_id).then((configs) => {\n      this.config = this._objToArray(configs);\n    });\n\n    this.hass.callApi('GET', 'zwave/values/' + this.nodes[selectedNode].attributes.node_id).then((values) => {\n      this.values = this._objToArray(values);\n    });\n\n    this.hass.callApi('GET', 'zwave/groups/' + this.nodes[selectedNode].attributes.node_id).then((groups) => {\n      this.groups = this._objToArray(groups);\n    });\n\n    this.hasNodeUserCodes = false;\n    this.notifyPath('hasNodeUserCodes');\n    this.hass.callApi('GET', 'zwave/usercodes/' + this.nodes[selectedNode].attributes.node_id).then((usercodes) => {\n      this.userCodes = this._objToArray(usercodes);\n      this.hasNodeUserCodes = this.userCodes.length > 0;\n      this.notifyPath('hasNodeUserCodes');\n    });\n  }\n\n  selectedEntityChanged(selectedEntity) {\n    if (selectedEntity === -1) return;\n    var el = this;\n    el.hass.callApi('GET', 'zwave/values/' + el.nodes[el.selectedNode].attributes.node_id).then((values) => {\n      el.values = el._objToArray(values);\n    });\n\n    var valueId = el.entities[selectedEntity].attributes.value_id;\n    var valueData = el.values.find(function (obj) { return obj.key === valueId; });\n    var valueIndex = el.values.indexOf(valueData);\n    el.hass.callApi('GET', 'config/zwave/device_config/' + valueId)\n      .then(function (data) {\n        el.entityIgnored = data.ignored || false;\n        el.entityPollingIntensity = el.values[valueIndex].value.poll_intensity;\n      });\n  }\n\n  computeSelectedEntityAttrs(selectedEntity) {\n    if (selectedEntity === -1) return 'No entity selected';\n    var entityAttrs = this.entities[selectedEntity].attributes;\n    var att = [];\n    Object.keys(entityAttrs).forEach(function (key) {\n      att.push(key + ': ' + entityAttrs[key]);\n    });\n    return att.sort();\n  }\n\n  computeSelectCaption(stateObj) {\n    return computeStateName(stateObj) + ' (Node:' +\n      stateObj.attributes.node_id + ' ' +\n      stateObj.attributes.query_stage + ')';\n  }\n\n  computeSelectCaptionEnt(stateObj) {\n    return (computeStateDomain(stateObj) + '.'\n            + computeStateName(stateObj));\n  }\n\n  computeIsNodeSelected() {\n    return (this.nodes && this.selectedNode !== -1);\n  }\n\n  computeIsEntitySelected(selectedEntity) {\n    return (selectedEntity === -1);\n  }\n\n  computeNodeServiceData(selectedNode) {\n    return { node_id: this.nodes[selectedNode].attributes.node_id };\n  }\n\n  computeHealNodeServiceData(selectedNode) {\n    return {\n      node_id: this.nodes[selectedNode].attributes.node_id,\n      return_routes: true\n    };\n  }\n\n  computeGetNodeName(selectedNode) {\n    if (this.selectedNode === -1 ||\n      !this.nodes[selectedNode].entity_id) return -1;\n    return this.nodes[selectedNode].attributes.node_name;\n  }\n\n  computeNodeNameServiceData(newNodeNameInput) {\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      name: newNodeNameInput\n    };\n  }\n\n  computeRefreshEntityServiceData(selectedEntity) {\n    if (selectedEntity === -1) return -1;\n    return { entity_id: this.entities[selectedEntity].entity_id };\n  }\n\n  computePollIntensityServiceData(entityPollingIntensity) {\n    if (!this.selectedNode === -1 || this.selectedEntity === -1) return -1;\n    return {\n      node_id: this.nodes[this.selectedNode].attributes.node_id,\n      value_id: this.entities[this.selectedEntity].attributes.value_id,\n      poll_intensity: parseInt(entityPollingIntensity),\n    };\n  }\n\n  saveEntity() {\n    var data = {\n      ignored: this.entityIgnored,\n      polling_intensity: parseInt(this.entityPollingIntensity),\n    };\n    return this.hass.callApi('POST', 'config/zwave/device_config/' + this.entities[this.selectedEntity].entity_id, data);\n  }\n\n  toggleHelp() {\n    this.showHelp = !this.showHelp;\n  }\n\n  _objToArray(obj) {\n    var array = [];\n    Object.keys(obj).forEach(function (key) {\n      array.push({\n        key: key,\n        value: obj[key],\n      });\n    });\n    return array;\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('ha-config-zwave', HaConfigZwave);\n","import '@polymer/app-route/app-route.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../layouts/hass-error-screen.js';\n\nimport './automation/ha-config-automation.js';\nimport './cloud/ha-config-cloud.js';\nimport './config-entries/ha-config-entries.js';\nimport './core/ha-config-core.js';\nimport './customize/ha-config-customize.js';\nimport './dashboard/ha-config-dashboard.js';\nimport './script/ha-config-script.js';\nimport './zwave/ha-config-zwave.js';\n\nimport isComponentLoaded from '../../common/config/is_component_loaded.js';\nimport NavigateMixin from '../../mixins/navigate-mixin.js';\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaPanelConfig extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <app-route\n      route='[[route]]'\n      pattern='/:page'\n      data=\"{{_routeData}}\"\n    ></app-route>\n\n    <iron-media-query query=\"(min-width: 1040px)\" query-matches=\"{{wide}}\">\n    </iron-media-query>\n    <iron-media-query query=\"(min-width: 1296px)\" query-matches=\"{{wideSidebar}}\">\n    </iron-media-query>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"core\")]]' restamp>\n      <ha-config-core\n        page-name='core'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-core>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"cloud\")]]' restamp>\n      <ha-config-cloud\n        page-name='cloud'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n        account='[[account]]'\n      ></ha-config-cloud>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"dashboard\")]]'>\n      <ha-config-dashboard\n        page-name='dashboard'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n        account='[[account]]'\n        narrow='[[narrow]]'\n        show-menu='[[showMenu]]'\n      ></ha-config-dashboard>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"automation\")]]' restamp>\n      <ha-config-automation\n        page-name='automation'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-automation>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"script\")]]' restamp>\n      <ha-config-script\n        page-name='script'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-script>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"zwave\")]]' restamp>\n      <ha-config-zwave\n        page-name='zwave'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-zwave>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"customize\")]]' restamp>\n      <ha-config-customize\n        page-name='customize'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-customize>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"integrations\")]]' restamp>\n      <ha-config-entries\n        page-name='integrations'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-entries>\n    </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      account: Object,\n\n      route: {\n        type: Object,\n        observer: '_routeChanged',\n      },\n\n      _routeData: Object,\n\n      wide: Boolean,\n      wideSidebar: Boolean,\n\n      isWide: {\n        type: Boolean,\n        computed: 'computeIsWide(showMenu, wideSidebar, wide)'\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    if (isComponentLoaded(this.hass, 'cloud')) {\n      this.hass.callApi('get', 'cloud/account').then((account) => { this.account = account; });\n    }\n    this.addEventListener('ha-account-refreshed', (ev) => {\n      this.account = ev.detail.account;\n    });\n  }\n\n  computeIsWide(showMenu, wideSidebar, wide) {\n    return showMenu ? wideSidebar : wide;\n  }\n\n  _routeChanged(route) {\n    if (route.path === '' && route.prefix === '/config') {\n      this.navigate('/config/dashboard', true);\n    }\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n}\n\ncustomElements.define('ha-panel-config', HaPanelConfig);\n"],"sourceRoot":""}